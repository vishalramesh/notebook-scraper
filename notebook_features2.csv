name,views,char_length,packages
"COVID-19 Case Study - Analysis, Viz & Comparisons","12,203",5964,"['pandas', 'numpy', 'matplotlib.pyplot', 'matplotlib.ticker', 'pycountry_convert', 'folium', 'branca', 'datetime.datetime', 'datetime.timedelta', 'datetime.date', 'scipy.interpolate.make_interp_spline', 'scipy.interpolate.BSpline', 'plotly.express', 'json', 'requests', 'keras.layers.Input', 'keras.layers.Dense', 'keras.layers.Activation', 'keras.layers.LeakyReLU', 'keras.models', 'keras.optimizers.RMSprop', 'keras.optimizers.Adam']"
Browsing research papers with a BM25 search engine,"17,604",3068,"['ipywidgets.Image', 'cord.ResearchPapers', 'multiprocessing', 'concurrent.futures.ThreadPoolExecutor', 'concurrent.futures.as_completed', 'typing.Collection', 'typing.Any', 'functools.partial']"
😷Mining COVID-19 scientific papers🦠,"5,515",7784,"['IPython.display.HTML', 'numpy', 'pandas', 'spacy', 're', 'pprint.pprint', 'gensim', 'gensim.corpora', 'gensim.utils.simple_preprocess', 'gensim.models.CoherenceModel', 'nltk.stem.WordNetLemmatizer', 'pyLDAvis', 'pyLDAvis.gensim', 'matplotlib.pyplot', 'seaborn', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.pipeline.Pipeline', 'sklearn.metrics.confusion_matrix', 'sklearn.metrics.accuracy_score', 'sklearn.metrics.f1_score', 'sklearn.metrics.classification_report', 'sklearn.model_selection.train_test_split', 'sklearn.naive_bayes.GaussianNB', 'sklearn.naive_bayes.BernoulliNB', 'sklearn.naive_bayes.MultinomialNB', 'sklearn.model_selection.GridSearchCV', 'logging', 'warnings', 'os', 'tensorflow', 'bert', 'bert.run_classifier', 'bert.optimization', 'bert.tokenization', 'bert.modeling', 'itertools', 'nltk.corpus.stopwords', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'tqdm.tqdm_notebook', 'tensorflow_hub', 'sklearn.metrics.pairwise.cosine_similarity', 'PIL.Image', 'wordcloud.ImageColorGenerator', 'matplotlib.pyplotasplt', 'matplotlib.colors', 'matplotlib.patches.Rectangle', 'matplotlib.ticker.FuncFormatter', 'bokeh.models.HoverTool', 'sklearn.manifold.TSNE', 'bokeh.plotting.figure', 'bokeh.plotting.output_file', 'bokeh.plotting.show', 'bokeh.models.Label', 'bokeh.io.output_notebook', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.decomposition.TruncatedSVD', 'sklearn.feature_extraction.text.HashingVectorizer', 'sklearn.cluster.KMeans', 'gensim.summarization.summarizer.summarize', 'nltk', 'nltk.tokenize.sent_tokenize', 'torch', 'networkx', 'tqdm.tqdm']"
Anserini+BERT-SQuAD for context corpus search,"1,414",8493,"['os', 'pyserini.search.pysearch', 'IPython.core.display.display', 'IPython.core.display.HTML', 'json', 'torch', 'transformers.BertForQuestionAnswering', 'transformers.BertTokenizer', 'numpy', 'tqdm.tqdm', 'pandas', 'Bio.Entrez', 'Bio.Medline', 're']"
COVID-19 Analysing Growth Factor & Inflection  ,"2,347",4069,"['numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'plotly.offline', 'plotly.graph_objs', 'folium', 'seaborn', 'warnings', 'os', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'IPython.display.YouTubeVideo']"
"transmission, incubation and environment 2.0",152,2942,"['numpy', 'pandas', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML', 'nltk.PorterStemmer']"
"Document clustering (kmeans, som)",591,10211,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 're', 'gensim', 'gensim.models.Doc2Vec', 'time', 'sklearn.cluster.KMeans', 'sklearn.metrics.silhouette_score', 'sklearn.decomposition.PCA', 'mpl_toolkits.mplot3d.Axes3D', 'somoclu', 'tensorflow', 'tensorflow.keras', 'tensorflow.keras.preprocessing.text.Tokenizer', 'tensorflow.keras.preprocessing.sequence.pad_sequences']"
CORD-19 Analysis with Sentence Embeddings,"6,745",7544,"['cord19q.etl.Etl', 'cord19q.index.Index', 'cord19q.highlights.Highlights', 'cord19q.tokenizer.Tokenizer', 'wordcloud.WordCloud', 'matplotlib.pyplot', 'numpy', 'plotly.graph_objects', 'pycountry', 'pandas', 'sqlite3', 'cord19q.embeddings.Embeddings', 'cord19q.query.Query', 'cord19q.report.Report', 'IPython.display.display', 'IPython.display.Markdown']"
Covid-19 in Brazil: Predicting Cases and Deaths,991,2378,"['pandas', 'numpy', 'matplotlib.pyplot', 'seaborn', 'folium', 'folium.plugins', 'sklearn.linear_model.LinearRegression', 'sklearn.model_selection.train_test_split', 'sklearn.preprocessing.PolynomialFeatures', 'sklearn.metrics.mean_squared_error', 'sklearn.metrics.mean_absolute_error', 'datetime', 'plotly.express', 'plotly.graph_objects', 'plotly.subplots.make_subplots', 'plotly.graph_objs.*', 'sklearn.metrics', 'opencage.geocoder.OpenCageGeocode', 'warnings']"
COVID-19 Four different epidemic situations,"1,408",3478,[]
CORD-19: Simple Scikit- Topic Models + Doc2Vec,72,5269,"['pathlib.Path', 'os', 'json', 'string.punctuation', 're', 'warnings', 'string', 'numpy', 'pandas', 'dask.dataframe', 'hvplot.pandas', 'holoviews', 'matplotlib.pyplot', 'sklearn.base.BaseEstimator', 'sklearn.base.MetaEstimatorMixin', 'sklearn.utils.metaestimators.if_delegate_has_method', 'sklearn.datasets.load_files', 'sklearn.pipeline.Pipeline', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.cluster.DBSCAN', 'umap.UMAP', 'gensim.sklearn_api.D2VTransformer', 'gensim.sklearn_api.W2VTransformer']"
CORD19-Metadata Enrich: Microsoft Academic API,43,847,"['pandas', 'numpy', 'kaggle_secrets.UserSecretsClient', 'requests', 'json', 'tqdm.notebook.tqdm']"
COVID-19: EDA with recent update on March,756,5910,"['gc', 'os', 'pathlib.Path', 'random', 'sys', 'tqdm.notebook.tqdm', 'numpy', 'pandas', 'scipy', 'matplotlib.pyplot', 'seaborn', 'IPython.core.display.display', 'IPython.core.display.HTML', 'plotly.tools', 'plotly.subplots', 'plotly.offline', 'plotly.graph_objs', 'plotly.express', 'plotly.figure_factory', 'plotly.io', 'sklearn.preprocessing', 'sklearn.model_selection.KFold', 'lightgbm', 'xgboost', 'catboost']"
Semantic search using Vespa.ai's cord19 index,73,272,"['os', 'transformers.AutoTokenizer', 'transformers.AutoModelWithLMHead', 'sentence_transformers.SentenceTransformer', 'sentence_transformers.models', 'requests']"
Document embeddings to find tasks related papers,75,1561,"['pandas', 'calendar', 'wordcloud.WordCloud', 'matplotlib.pyplot', 'gensim.corpora.Dictionary', 'gensim.models', 'gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument', 'pprint.pprint', 'cleantext', 'nltk.stem.WordNetLemmatizer', 'nltk', 'tqdm.tqdm', 'sklearn.decomposition.TruncatedSVD', 'csv']"
CORD-19: Explore Drugs Being Developed,"2,151",6443,"['sys', 'glob', 'json', 'pandas', 'pickle', 'spacy', 'spacy.displacy', 'spacy.matcher.Matcher', 'tqdm.tqdm', 'en_ner_bc5cdr_md', 'os', 'collections.Counter', 'matplotlib.pyplot', 'chembl_webresource_client.new_client.new_client', 'rdkit', 'rdkit.Chem', 'rdkit.Chem.Draw', 'py3Dmol#Amazinglibraryfor3Dvisualization', 'rdkit.Chem.AllChem', 'ipywidgets.interact', 'ipywidgets.interactive', 'ipywidgets.fixed', 'IPython.display.Image', 'cv2', 'numpy', 'mpl_toolkits.mplot3d.Axes3D', 'sklearn.decomposition', 'sklearn.datasets', 'sklearn.cluster.KMeans', 'gc', 'ipywidgets', 'ipywidgets.interact_manual', 'IPython.core.display.HTML', 'matplotlib.patches']"
covsum,53,4155,"['numpy', 'pandas', 'json', 're', 'random', 'string', 'collections.Counter', 'itertools.chain', 'nltk.corpus.stopwords', 'nltk.corpus.udhr', 'os']"
CORD-19,96,74,"['numpy', 'tqdm.tqdm', 'nltk.corpus.stopwords', 'nltk.stem.porter.PorterStemmer']"
CoronaWhy.org - Global Collaboration (join slack),"5,912",12850,['IPython.display.HTML']
My Little Preprocessing,22,4669,"['numpy', 'pandas', 'os', 'tqdm.auto.tqdm', 'json', 'nltk', 're', 'string', 'collections', 'nltk.util.ngrams', 'nltk.corpus.stopwords', 'spacy', 'glob', 'urllib.parse.urlparse', 'collections.defaultdict', 'hashlib', 'langdetect.detect', 'enchant', 'weighted_levenshtein.lev', 'weighted_levenshtein.osa', 'weighted_levenshtein.dam_lev', 'Levenshtein', 'time', 'gensim.models.Phrases', 'gensim', 'multiprocessing.Pool', 'psutil', 'gc']"
3D World Heat Map of Cumulative Confirmed Case,138,505,[]
Data analysis on Coronavirus,210,2104,"['IPython.display.Image', 'numpy', 'pandas', 'matplotlib', 'matplotlib.pyplot', 'plotly.express', 'plotly.graph_objects', 'country_converter', 'functools', 'sklearn.linear_model.LinearRegression', 'sklearn.model_selection.RandomizedSearchCV', 'sklearn.model_selection.train_test_split', 'sklearn.preprocessing.PolynomialFeatures', 'sklearn.svm.SVR', 'sklearn.metrics.mean_squared_error', 'sklearn.metrics.mean_absolute_error', 'copy']"
COVID-19 Risk factors,135,315,"['covid19_tools', 'pandas', 're', 'IPython.core.display.display', 'IPython.core.display.HTML', 'html']"
COVID-19 Literature Clustering,"41,351",7140,"['IPython.display.Image', 'numpy', 'pandas', 'glob', 'json', 'matplotlib.pyplot', 're', 'sklearn.feature_extraction.text.HashingVectorizer', 'sklearn.model_selection.train_test_split', 'sklearn.manifold.TSNE', 'matplotlib.pyplotasplt', 'seaborn', 'sklearn.cluster.KMeans', 'sklearn.model_selection.cross_val_score', 'sklearn.ensemble.RandomForestClassifier', 'sklearn.model_selection.cross_val_predict', 'sklearn.metrics.precision_score', 'sklearn.metrics.recall_score', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.decomposition.PCA', 'mpl_toolkits.mplot3d.Axes3D', 'random', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.models.CustomJS', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.transform.transform', 'bokeh.io.output_notebook', 'bokeh.plotting.figure', 'bokeh.layouts.column', 'bokeh.models.RadioButtonGroup', 'bokeh.models.TextInput', 'bokeh.layouts.gridplot', 'bokeh.models.Div', 'bokeh.models.Paragraph', 'bokeh.layouts.widgetbox']"
Covid19 Challanges,22,187,"['numpy', 'pandas', 'os', 'tqdm.tqdm', 'json', 're', 'string', 'wordcloud.WordCloud', 'matplotlib.pyplotasplt']"
SciBERT Embeddings,"1,185",4855,"['torch', 'transformers.BertTokenizer', 'transformers.BertModel', 'sklearn.metrics.pairwise.cosine_similarity', 'umap', 'os', 'json', 'bokeh.plotting.figure', 'bokeh.plotting.show', 'bokeh.plotting.output_notebook', 'bokeh.models.HoverTool', 'bokeh.models.ColumnDataSource', 'bokeh.models.CategoricalColorMapper', 'bokeh.palettes.Spectral10', 'bokeh.palettes.Category20c', 'bokeh.palettes.magma', 'pandas', 'sklearn.decomposition.PCA', 'collections', 'gc', 'pickle', 'bm25_index.BM25Index']"
Topic Modeling: Finding Related Articles,"17,808",2640,"['IPython.utils.io', 'numpy', 'pandas', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'scispacy', 'spacy', 'en_core_sci_md', 'scipy.spatial.distance.jensenshannon', 'joblib', 'IPython.display.HTML', 'IPython.display.display', 'ipywidgets.interact', 'ipywidgets.Layout', 'ipywidgets.HBox', 'ipywidgets.VBox', 'ipywidgets.Box', 'ipywidgets', 'IPython.display.clear_output', 'tqdm.tqdm', 'os.path.isfile', 'seaborn', 'matplotlib.pyplot']"
virus strains,36,180,"['numpy', 'pandas', 'search_func_py.*']"
Creating a Good Analytics Report,"23,681",3799,[]
"CORD-19: EDA, parse JSON and generate clean CSV🧹","13,379",1753,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.notebook.tqdm']"
CORD-19 Challenge: Titles topic modelling,57,5888,"['numpy', 'pandas', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'nltk.stem.WordNetLemmatizer', 're', 'string', 'langdetect.detect', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text', 'gensim.matutils', 'gensim.models', 'scipy.sparse', 'gensim.models.CoherenceModel', 'gensim.corpora', 'pyLDAvis', 'pyLDAvis.gensim', 'matplotlib.pyplot', 'pickle']"
Sentence embeddings with spaCy and scispacy,49,630,"['glob', 'json', 'pandas', 'numpy', 'scispacy', 'spacy', 'matplotlib.pyplot', 'wordcloud.WordCloud', 'itertools.chain', 'collections.Counter', 'sklearn.metrics.pairwise.cosine_distances', 'sklearn.metrics.pairwise.manhattan_distances', 'pprint.pprint', 'tqdm.notebook.trange', 'tqdm.notebook.tqdm']"
"CORD-19 Transmission, Incubation, Environment",474,1583,"['IPython.display.display', 'IPython.display.Markdown']"
COVID-19 Dataset : Gaining actionable insights 📊,"16,724",10059,"['os', 'gc', 're', 'folium', 'scipy.stats', 'warnings', 'math', 'numpy', 'scipy', 'pandas', 'pycountry', 'sklearn.metrics', 'sklearn.utils.shuffle', 'gensim.models.Word2Vec', 'sklearn.cluster.KMeans', 'sklearn.decomposition.PCA', 'nltk', 'textblob.TextBlob', 'wordcloud.WordCloud', 'nltk.corpus.wordnet', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.stem.WordNetLemmatizer', 'nltk.sentiment.vader.SentimentIntensityAnalyzer', 'random', 'networkx', 'pandas.Timestamp', 'requests', 'IPython.display.HTML', 'seaborn', 'tqdm.tqdm', 'matplotlib.cm', 'matplotlib.pyplot', 'plotly.express', 'plotly.graph_objects', 'plotly.figure_factory', 'plotly.subplots.make_subplots']"
COVID-19 Thematic tagging with Regular Expressions,"2,435",3073,"['plotly.express', 'plotly.graph_objects', 'pandas', 're', 'pycountry']"
COVID-19 Risk Factors (Sci-NLP) Compiler,128,2199,"['pandas', 'io.StringIO', 'scispacy', 'spacy#needstoupdatespacytoloadSciSpacymodel.', 'spacy.displacy', 'spacy', 'os', 'json', 'glob', 'spacy.matcher.Matcher', 'spacy.matcher.PhraseMatcher']"
CORD-19 Diagnostics and Surveillance,110,3804,"['IPython.display.display', 'IPython.display.Markdown']"
CORD-19 Ethical and Social Science Considerations,82,1531,"['IPython.display.display', 'IPython.display.Markdown']"
CORD-19 Medical Care,107,2179,"['IPython.display.display', 'IPython.display.Markdown']"
CORD-19 Non-Pharmaceutical Interventions,89,1922,"['IPython.display.display', 'IPython.display.Markdown']"
Faster Semantic search using Faiss,145,3419,"['torch', 'transformers', 'numpy', 'pandas', 'sklearn.metrics.pairwise.cosine_similarity', 'json', 'time', 'faiss']"
CORD-19 Vaccines and Therapeutics,103,1524,"['IPython.display.display', 'IPython.display.Markdown']"
"CORD-19 Virus Genetics, Origin, and Evolution",120,1300,"['IPython.display.display', 'IPython.display.Markdown']"
CORD-19 Risk Factors,167,870,"['IPython.display.display', 'IPython.display.Markdown']"
CORD19 Metadata Enrich: NIH API,160,2686,"['pandas', 'matplotlib.pyplot', 'urllib.request.urlopen', 'xml.etree.ElementTree', 'tqdm.notebook.tqdm']"
Covid-19 Corpus Pickle Factory,17,87,"['pandas', 'os', 'json', 'glob', 'sys', 'urllib', 'pickle', 'gc', 're', 'random', 'os.path', 'summa.summarizer.summarize', 'summa.keywords.keywords']"
COVID 19- TASKS FILTERING ,285,2909,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 'json', 'glob', 'sys', 'gensim.parsing.preprocessing.remove_stopwords', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'time', 're', 'nltk', 'nltk.corpus.stopwords', 'nltk.stem.porter.PorterStemmer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.decomposition.PCA', 'mpl_toolkits.mplot3d.Axes3D', 'gensim.corpora', 'gensim.models', 'gensim.similarities', 'sklearn.metrics.pairwise.cosine_similarity', 'nltk.tokenize.word_tokenize', 'nltk.tokenize.sent_tokenize', 'seaborn', 'termcolor.colored', 'colorama.Fore', 'IPython.core.display.display', 'IPython.core.display.HTML']"
CORD-19 Sharing and Collaboration,60,1765,"['IPython.display.display', 'IPython.display.Markdown']"
CORD-19 Solution Toolbox,"7,567",1492,"['numpy', 'pandas', 'os', 'json', 'tqdm.tqdm', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'tqdm.tqdm_notebook', 'seaborn']"
Extract COVID-19 treatments related articles,47,2,"['numpy', 'pandas', 'os', 'nltk', 'nltk.corpus.stopwords', 're']"
CORD : Tools and Knowledge graphs🛠️ 🛠️ ,"6,275",683,"['sklearn.feature_extraction.text.CountVectorizer', 'sklearn.metrics.pairwise.cosine_similarity', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.PorterStemmer', 'nltk.tokenize.word_tokenize', 'sklearn.cluster.DBSCAN', 'nltk.corpus.stopwords', 'spacy.matcher.Matcher', 'collections.Counter', 'matplotlib.pyplot', 'spacy.tokens.Span', 'tensorflow_hub', 'rake_nltk.Rake', 'tensorflow', 'pyLDAvis.gensim', 'tqdm.tqdm', 'seaborn', 'networkx', 'pandas', 'numpy', 'pyLDAvis', 'gensim', 'spacy', 'os', 'gc', 're', 'RAKE', 'operator', 'logging', 'pytextrank', 'sys']"
Evidence Gap Map for Risk Areas,206,2282,"['pandas', 'numpy', 're', 'glob', 'json', 'gensim', 'gensim.models', 'gensim.similarities', 'gensim.models.doc2vec.TaggedDocument', 'gensim.models.doc2vec.Doc2Vec', 'sklearn.manifold.TSNE', 'numpy.random.seed', 'numpy.random.randint', 'plotly.offline.init_notebook_mode', 'plotly.offline.iplot', 'plotly.graph_objects']"
"COVID-19 - Temperature, Air Travel & Transmission ","7,370",3175,"['numpy', 'pandas', 'seaborn', 'matplotlib.pyplot', ""warnings#currentversionofseaborngeneratesabunchofwarningsthatwe'llignore"", 'os', 'plotly', 'plotly.graph_objects', 'plotly.offline.download_plotlyjs', 'plotly.offline.init_notebook_mode', 'plotly.offline.plot', 'plotly.offline.iplot', 'plotly.offline', 'plotly.express', 'pandas.plotting.parallel_coordinates']"
covid19_1 Visualization,36,284,"['numpy', 'pandas', 'matplotlib', 'matplotlib.pyplot', 'folium', 'os', 'datetime.datetime', 'datetime.timedelta', 'datetime.date']"
Correlation of COVID-19 to White-Nose Syndrome,129,2653,"['pandas', 'numpy', 'math', 'folium', 'IPython.display.HTML', 'IPython.display.display']"
NLP Text Mining - Disease behavior,"3,714",2543,"['os', 're', 'json', 'math', 'numpy', 'pandas', 'matplotlib.pyplot', 'matplotlib.pyplot.figure', 'seaborn', 'spacy', 'spacy.matcher.Matcher', 'tqdm.tqdm']"
CORD-19 Report Builder,145,123,"['io.StringIO', 'IPython.display.display', 'IPython.display.Markdown', 'cord19q.models.Models', 'cord19q.report.Report']"
Extractive text summarization + NER exploration,390,1666,"['numpy', 'pandas', 'json', 'glob', 'sys', '.OrderedDict', 'os', 're', 'warnings', 'seaborn', 'matplotlib.pyplot', 'summarizer.Summarizer', 'spacy', 'spacy.displacy', 'collections.Counter', 'en_ner_bionlp13cg_md', 'medacy.model.model.Model', 'en_core_med7_lg']"
COVID-19 Utility Script,15,2,"['numpy', 'pandas', 'os', 'json', 'IPython.display.Image', 'IPython.core.display.HTML', 're', 're.finditer', 'nltk', 'spacy', 'nltk.stem.PorterStemmer', 'collections.defaultdict']"
CORD-19:Understanding papers with TextAnalytics🔬,"3,230",3038,"['string', 'numpy', 'pandas', 'random', 'collections.defaultdict', 'matplotlib.pyplot', 'seaborn', 'tqdm.tqdm', 'nltk', 're', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'plotly.tools', 'chart_studio.plotly', 'plotly.offline.init_notebook_mode', 'plotly.offline.iplot', 'plotly.graph_objs', 'plotly.figure_factory', 'time', 'pyLDAvis.sklearn', 'pylab.bone', 'pylab.pcolor', 'pylab.colorbar', 'pylab.plot', 'pylab.show', 'pylab.rcParams', 'pylab.savefig', 'textstat', 'spacy', 'spacy.lang.en.stop_words.STOP_WORDS', 'gensim.summarization.summarizer.summarize', 'spacy.lang.en.English', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.NMF', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.decomposition.TruncatedSVD', 'statistics.*', 'concurrent.futures', 'os', 'warnings', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS']"
CORD-19 - Data extraction functions,"5,916",8465,"['numpy', 'pandas', 'matplotlib.pyplot', 'time', 'warnings', 'heapq.nlargest', 'spacy', 'spacy.lang.en.English', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'scipy.sparse.csr.csr_matrix#needthisifyouwanttosavetfidf_matrix', 'os']"
COVID-19: Knowledge Graph Embeddings,675,1577,"['numpy', 'pandas', 'matplotlib.pyplot', 'tqdm.tqdm_notebook', 'rdflib', 'sklearn.metrics.pairwise.cosine_similarity', 'sklearn.manifold.TSNE', 'sys', 'graph.KnowledgeGraph', 'graph.Vertex', 'walkers.RandomWalker', 'rdf2vec.RDF2VecTransformer', 'networkx', 'scipy.sparse', 'collections.defaultdict', 'collections.Counter', 'collections.OrderedDict', 'functools.lru_cache', 'heapq', 'os', 'itertools', 'time', 'scipy.stats.entropy', 'hashlib.md5', 'copy', 'sklearn.base.ClassifierMixin', 'sklearn.base.TransformerMixin', 'sklearn.base.BaseEstimator', 'joblib.Parallel', 'joblib.delayed', 'multiprocessing.Pool', 'multiprocessing.pool.ThreadPool', 'psutil', 'urllib', 'sklearn.cluster.KMeans']"
CORD-19-LDA-Topic-modeling-reccomendation-system,"4,729",81,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys', 'IPython.display.FileLink', 'ktrain']"
Country-Based Study on COVID-19,"1,352",2264,"['numpy', 'pandas', 'csv', 'os.path', 'datetime', 'copy', 'datetime.datetime', 'matplotlib.pyplot', 'itertools', 'plotly.express']"
A Comprehensive Resource Notebook For Beginners,"2,086",2635,"['numpy', 'pandas', 'os', 'seaborn', 'IPython.display.IFrame', 'IPython.display.YouTubeVideo', 'json##CODETOPRINTAJSONFILETOCHECKITSSTRUCTURE']"
Most Common Words in the CORD-19 Dataset,"4,993",219,"['os', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings', 'json']"
Create Corona .csv File,"2,509",2,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys']"
 COVID-19: Top2Vec Interactive Search,62,1172,"['numpy', 'pandas', 'json', 'os', 'ipywidgets', 'IPython.display.clear_output', 'IPython.display.display', 'top2vec.Top2Vec']"
COVID EDA: Initial Exploration Tool,"1,654",331,"['numpy', 'pandas', 'matplotlib.pyplot', 'glob', 'json']"
Risks of COVID-19 - AI driven Q&A,"1,261",2371,"['os', 'json', 'warnings', 'sentence_transformers.SentenceTransformer', 'scipy', 'IPython.display.display', 'IPython.display.Markdown', 'IPython.display.Latex']"
kernel5e2466e43e,15,52,"['numpy', 'pandas', 'json']"
Corona Virus Data Visualization ,"1,389",1206,[]
COVID-19: Deep Embedded Literature Clustering,40,2686,"['numpy', 'pandas', 'glob', 'json', 'matplotlib.pyplot', 're', 'keras.preprocessing.text.Tokenizer', 'keras.preprocessing.sequence.pad_sequences', 'sklearn.preprocessing.MinMaxScaler', 'time.time', 'keras.backend', 'keras.engine.topology.Layer', 'keras.engine.topology.InputSpec', 'keras.layers.Dense', 'keras.layers.Input', 'keras.layers.Embedding', 'keras.models.Model', 'keras.optimizers.SGD', 'keras.callbacks', 'keras.initializers.VarianceScaling', 'sklearn.cluster.KMeans', 'keras.utils.plot_model', 'IPython.display.Image', 'sklearn.decomposition.PCA', 'matplotlib.pyplotasplt', 'seaborn']"
Exploring_corona_competition,9,457,"['numpy', 'pandas', 'os', 'tqdm', 'gensim.models.word2vec.Word2Vec', 'nltk.tokenize.word_tokenize']"
COVID-19 - Search Engine with Bert,553,1710,"['numpy', 'pandas', 'scipy', 'os', 'json', 'warnings', 'sklearn.metrics.pairwise.cosine_similarity', 'sentence_transformers.SentenceTransformer', 'tqdm.tqdm']"
CoronaVirus (COVID-19) Outbreak Data Analysis,"1,581",3869,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'folium', 'plotly.offline', 'plotly.offline.iplot', 'plotly.offline.init_notebook_mode', 'plotly.graph_objs', 'datetime.date', 'plotly.subplots.make_subplots']"
summary page vaccines and therapeutics,284,5177,"['numpy', 'pandas', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML', 'nltk.PorterStemmer']"
KeyPhrase Extraction and Graph analysis,604,3473,"['pandas', 'pke.base.LoadFile', 'string.punctuation', 'nltk.corpus.stopwords', 'string', 'collections.defaultdict', 'os', 'sys', 'gzip', 'pke.unsupervised.KPMiner', 'pke.load_document_frequency_file', 'wordcloud.WordCloud', 'matplotlib', 'matplotlib.pyplot', 'networkx', 'networkx.algorithms.community.label_propagation_communities', 'fa2.ForceAtlas2', 'pyvis.network.Network', 'flashtext.KeywordProcessor', 'nltk.tokenize.sent_tokenize']"
summary page COVID-19 risk factors,607,2755,"['numpy', 'pandas', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML', 'nltk.PorterStemmer']"
COVID-19 LDA Notebook,59,302,"['os', 'glob', 'json', 'pandas', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'tqdm.notebook.tqdm', 'nltk', 'nltk.corpus.wordnet', 'spacy', 'en_core_sci_lg', 'spacy_langdetect.LanguageDetector', 'joblib', 'scipy.spatial.distance']"
Visualization of Virus Origin & Genetic Evolution,100,2341,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 'tqdm.tqdm_notebook', 'sklearn.preprocessing.StandardScaler', 'sklearn.svm.NuSVR', 'sklearn.svm.SVR', 'sklearn.metrics.mean_absolute_error', 'lightgbm', 'xgboost', 'time', 'datetime', 'catboost.CatBoostRegressor', 'sklearn.preprocessing.LabelEncoder', 'sklearn.model_selection.StratifiedKFold', 'sklearn.model_selection.KFold', 'sklearn.model_selection.RepeatedKFold', 'sklearn.metrics', 'sklearn.linear_model', 'gc', 'seaborn', 'warnings', 'IPython.display.HTML', 'json', 'altair', 'networkx', 'numba.jit', 'catboost.CatBoostClassifier', 'itertools.product', 'altair.vega.v5', 'glob']"
Most mentioned antivirals,"1,175",2276,"['pandas', 'numpy', 'json', 'os.path', 're', 'distance', 'matplotlib.pyplot', 'itertools.combinations', 'textblob.TextBlob', 'nltk']"
Epidemiological curves using ECDC data,"1,651",2118,[]
CORD-19 Metadata Evaluation,"2,036",257,"['os', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'time', 'warnings']"
CORD-19 Match articles to tasks w/ Doc2Vec,"2,231",4042,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 're', 'gensim', 'random', 'sklearn.neighbors.NearestNeighbors', 'sklearn.cluster.KMeans', 'yellowbrick.cluster.KElbowVisualizer', 'sklearn.decomposition.PCA', 'umap', 'plotly.express']"
COVID-19: Topic Modeling and Search with Top2Vec,86,1562,"['numpy', 'pandas', 'json', 'os', 'top2vec.Top2Vec']"
CoronaWhy.org - Task: Risk Factors,79,6378,['IPython.display.HTML']
Epidemiology math models used in Research,154,3353,"['pandas', 're', 'pycountry', 'plotly.express', 'plotly.graph_objects', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.io.output_notebook', 'bokeh.plotting.figure']"
Age Dependent Incubation Period,142,81,"['numpy', 'pandas', 'search_func_py.*']"
COVID-19 Detection from X Ray Images of Lungs,"1,117",719,"['IPython.display.Image', 'keras.preprocessing.image.ImageDataGenerator', 'keras.preprocessing.image.img_to_array', 'keras.preprocessing.image.load_img', 'numpy', 'argparse', 'cv2', 'os', 'imutils.paths', 'tensorflow.keras.preprocessing.image.ImageDataGenerator', 'tensorflow.keras.applications.VGG16', 'tensorflow.keras.layers.AveragePooling2D', 'tensorflow.keras.layers.Dropout', 'tensorflow.keras.layers.Flatten', 'tensorflow.keras.layers.Dense', 'tensorflow.keras.layers.Input', 'tensorflow.keras.models.Model', 'tensorflow.keras.optimizers.Adam', 'tensorflow.keras.utils.to_categorical', 'sklearn.preprocessing.LabelBinarizer', 'sklearn.model_selection.train_test_split', 'sklearn.metrics.classification_report', 'sklearn.metrics.confusion_matrix', 'matplotlib.pyplot']"
BioBERT+CorEx Topic Search,725,2578,"['scipy.spatial.distance.cdist', 'subprocess', 'numpy', 'pandas', 'matplotlib.pyplot', 'pickle', 'ipywidgets.interact', 'ipywidgets.widgets#thisiswhatmakesthedataframeinteractive', 'sklearn.feature_extraction.text.CountVectorizer', 'scipy.sparse', 'corextopic.corextopicasct', 'bert_serving.client.BertClient']"
CORD-19 : FastText words clustering,"1,173",2375,"['numpy', 'pandas', 'matplotlib.pyplot', 'time', 'warnings', 'sklearn.manifold.TSNE', 'matplotlib.cm', 'matplotlib.style', 'spacy', 'spacy.lang.en.English', 'nltk.tokenize.word_tokenize', 'collections.Counter', 'nltk.corpus.stopwords', 'gensim.models.Word2Vec', 'multiprocessing.cpu_count', 'gensim.downloader', 're', 'string', 'unicodedata', 'nltk.stem.LancasterStemmer', 'nltk.stem.WordNetLemmatizer', 'gensim.models.FastText', 'plotly.io', 'plotly.graph_objects', 'plotly.offline.download_plotlyjs', 'plotly.offline.init_notebook_mode', 'plotly.offline.plot', 'plotly.offline.iplot']"
CORD-19: Create Dataframe,303,1272,"['numpy', 'pandas', 'glob', 'json', 'IPython.utils.io', 'scispacy', 'spacy', 'en_core_sci_lg', 'spacy_langdetect.LanguageDetector']"
CORD19 Metadata Enrich: Altmetric API,59,755,"['altmetric.Altmetric', 'pandas', 'numpy', 'tqdm.notebook.tqdm', 'glob', 'uuid']"
PySpark DataFrame Preprocessing for CORD-19,751,2986,"['pyspark.sql.functions.lit', 'pyspark.sql.types.(', 'pyspark.sql.SparkSession', 'pyspark.sql.functionsasF', 'pyspark.sql.Window']"
COVID19,131,3052,"['numpy', 'pandas', 'os', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'pyLDAvis.sklearn', 'json', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'PIL.Image', 're', 'seaborn', 'matplotlib.pyplot', 'matplotlib.style', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.decomposition.PCA', 'sklearn.metrics', 'gensim.models.Word2Vec', 'gensim.models.KeyedVectors', 'sklearn.neighbors.nearest_centroid.NearestCentroid', 'sklearn.cluster.AgglomerativeClustering', 'sklearn.cluster.KMeans', '', 'copy']"
AaaAaa,44,289,"['numpy', 'pandas', 'spacy', 'os']"
Consolidating Effects of Risk Factors on COVID-19,"1,244",840,"['numpy', 'pandas', 'json', 'IPython.display.Image', 'IPython.core.display.HTML', 're', 're.finditer', 'nltk', 'spacy', 'nltk.stem.PorterStemmer', 'collections.defaultdict', 'os']"
COVID-19 Open Research Dataset (CORD-19)-Analysis,359,3279,"['os', 'json', 'pandas', 'tqdm.tqdm', 'numpy', 'nltk.corpus.wordnet', 're', 'matplotlib.pyplot', 'nltk.corpus.stopwords', 'stop_words.get_stop_words']"
Vaccine data filter,"3,152",1848,"['numpy', 'pandas', 'json', 'os', 'nltk.stem.porter.PorterStemmer', 'nltk.stem.wordnet.WordNetLemmatizer', 're', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.RegexpTokenizer', 'os.path', 'PIL.Image', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'matplotlib.pyplot']"
Create Corona .csv File,308,2,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys']"
World Covid-19 EDA,"2,130",437,"['numpy', 'pandas', 'os', 'folium', 'seaborn', 'matplotlib.pyplot']"
COVID2020,"1,033",2,"['numpy', 'pandas', 'os']"
Non-pharmaceutical interventions Covid-19,"1,679",13479,"['IPython.display.Image', 'numpy', 'pandas', 'seaborn', 'matplotlib.pyplot', 'sklearn.feature_extraction', 'sklearn.linear_model', 'sklearn.model_selection', 'sklearn.preprocessing', 'plotly.graph_objs', 'plotly.offline', 'plotly.express', 'os', 'json', 'matplotlib.pyplotasplt']"
Topic Modelling: Journals Content About COVID-19📄,360,4017,"['os', 'json', 'numpy', 'pandas', 're', 'IPython.display.display', 'tqdm.tqdm', 'collections.Counter', 'ast', 'plotly.offline.download_plotlyjs', 'plotly.offline.init_notebook_mode', 'plotly.offline.plot', 'plotly.offline.iplot', 'plotly', 'plotly.graph_objs', 'gensim', 'gensim.corpora', 'gensim.models', 'gensim.similarities', 'logging', 'tempfile', 'nltk.corpus.stopwords', 'string.punctuation', 'collections.OrderedDict', 'seaborn', 'pyLDAvis.gensim', 'matplotlib.pyplot', 'warnings', 'matplotlib.mlab', 'sklearn.feature_extraction.text.CountVectorizer', 'textblob.TextBlob', 'scipy.stats', 'sklearn.decomposition.TruncatedSVD', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.manifold.TSNE', 'bokeh.plotting.figure', 'bokeh.plotting.output_file', 'bokeh.plotting.show', 'bokeh.models.Label', 'bokeh.io.output_notebook', 'sklearn.metrics.accuracy_score', 'sklearn.metrics.f1_score', 'tqdm.tqdm_notebookastqdm', 'Levenshtein.ratioaslevenshtein_distance', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.feature_extraction.text', 'scipy.spatial']"
A references-based atlas of COVID-19 research,149,3165,"['pandas', 'Bio.Entrez']"
Mat2Vec/COVID papers: Unexpected word asociations,379,1156,[]
Beat Corona,25,36,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.tqdm', 'tqdm.notebook']"
Hyperion,278,3763,['IPython.display.IFrame']
add_pub_types_to_metadata_df,39,2,"['pandas', 'json', 'Bio.Entrez', 'Bio.Medline', 'collections.Counter']"
COVID-19: Extracting the Hidden Topics With Gensim,80,4483,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'gensim', 'gensim.corpora', 'gensim.utils.simple_preprocess', 'gensim.models.CoherenceModel', 'spacy', 'pyLDAvis', ""pyLDAvis.gensim#don'tskipthis"", 're', 'string', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'warnings']"
Covids Incubation & Transmission Related Articles,"1,054",1413,"['numpy', 'pandas', 'os']"
Corona virus latest analysis,616,5556,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'folium', 'os']"
COVID-19 Save people in developing countries,38,1293,[]
Testing Positive After Recovery,58,55,"['numpy', 'pandas', 'search_func_py.*']"
CORD-19 : LDA Topic Model - Abstracts,40,2,"['numpy', 'pandas', 'os', 'json', 'gensim', 'nltk', 'pyLDAvis.gensim', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.SnowballStemmer', 'nltk.corpus.stopwords', 'gensim.corpora', 'gensim.models']"
CORD19: Generating CORONA CSV,30,169,"['numpy', 'tqdm.tqdm']"
Range of incubation periods for the disease,101,475,"['numpy', 'pandas', 'json', 're', 'os', 'matplotlib.style', 'tqdm.tqdm', 'matplotlib.pyplot']"
count_pmids_per_journal_no_full_text,20,2,['pandas']
Comparison of COVID-19 virus growth per country,329,2551,"['numpy', 'pandas', 'os#operatingsystem', 'matplotlib.pyplot', 'matplotlib.ticker', 'matplotlib']"
"COVID-19 Search Engine for all Queries, USE","2,353",3114,"['pandas', 'numpy', 'os', 're', 'operator', 'nltk', 'json', 'copy.deepcopy', 'nltk.tokenize.word_tokenize', 'nltk.pos_tag', 'nltk.corpus.stopwords', 'nltk.stem.WordNetLemmatizer', 'collections.defaultdict', 'nltk.corpus.wordnetaswn', 'sklearn.feature_extraction.text.TfidfVectorizer', 'tqdm.notebook.tqdm', 'time.sleep', 'tensorflow', 'tensorflow_hub', 'matplotlib.pyplot', 'sklearn.metrics.pairwise.linear_kernel']"
TaBu2020,29,1743,"['numpy', 'pandas', 'matplotlib.pyplot', 'json', 'spacy', 're', 'sklearn', 'sklearn.feature_extraction.text.CountVectorizerasBoW', 'sklearn.feature_extraction.text.TfidfVectorizerasTF_IDF', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.linear_model.LogisticRegressionasLR', 'sklearn.model_selection.KFold', 'sklearn.svm.SVC', 'scipy.spatial.distance.cosineasdist', 'operator', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS']"
COVID-19 Transmission and incubation,"1,051",307,"['covid19_tools', 'pandas', 're', 'IPython.core.display.display', 'IPython.core.display.HTML']"
corona_text_mining_spacy,"1,051",1502,"['os', 'json', 'gensim.models.Word2Vec', 'numpy', 'pandas', 'nltk', 'spacy', 'tqdm.notebook.tqdm']"
User-Friendly: Finding Related Articles,998,2124,"['IPython.utils.io', 'numpy', 'pandas', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'scispacy', 'spacy', 'scipy.spatial.distance.jensenshannon', 'joblib', 'pyLDAvis', 'pyLDAvis.sklearn', 'IPython.display.HTML', 'IPython.display.display', 'ipywidgets.interact', 'ipywidgets.Layout', 'ipywidgets.HBox', 'ipywidgets.VBox', 'ipywidgets.Box', 'ipywidgets', 'IPython.display.clear_output', 'tqdm.tqdm', 'en_core_sci_md']"
COVID-19 - AutoComplete Search Bar,"2,410",410,"['numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'IPython.display.display', 'rank_bm25.BM25Okapi', 'nltk', 'nltk.corpus.stopwords', 're', 'plotly.express']"
I-COVID19-NLP Data Parsing ,"1,125",1552,"['numpy', 'pandas', 'json', 'os', 'networkx', 'matplotlib.pyplot']"
Covid-19 subset of articles,420,161,"['glob', 'json', 'os', 'numpy', 'pandas', 'pprint.pprint']"
COVID-19-BERT-ResearchPapers-Semantic-Search,975,58758,"['os', 'glob', 'json', 'pandas', 'tqdm.tqdm', 're', 'sentence_transformers.SentenceTransformer', 'scipy.spatial', 'pickle']"
COVID-19: Knowledge Graph (Starter),656,1192,"['rdflib', 'networkx', 'matplotlib.pyplot']"
Basic Setup to import the JSON files,369,295,[]
Creating A Doc2Vec Model,642,4318,"['gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument', 'nltk.tokenize.word_tokenize', 'pandas', 'sys']"
biobert-covid2,34,2,"['numpy', 'pandas', 'os', 'scipy.spatial.distance.cdist', 'subprocess', 'matplotlib.pyplot', 'pickle', 'nltk.word_tokenize', 'nltk.corpus.stopwords', 'string.punctuation', 'scipy.spatial.distance', 'nltk', 'bert_serving.client.BertClient']"
biobert-covid4,22,2,"['os', 'pandas', 'numpy', 'scipy.spatial.distance.cdist', 'subprocess', 'matplotlib.pyplot', 'pickle', 'nltk.word_tokenize', 'nltk.corpus.stopwords', 'string.punctuation', 'scipy.spatial.distance', 'nltk', 'bert_serving.client.BertClient']"
COVID-19 CT-Scan & Xray CNN Detector,704,392,"['pandas', 'os', 'numpy', 'random', 'cv2', 'matplotlib.pyplot', 'tensorflow.keras.models.Model', 'tensorflow.keras.models.Sequential', 'tensorflow.keras.layers.Input', 'tensorflow.keras.layers.Dense', 'tensorflow.keras.layers.Flatten', 'tensorflow.keras.layers.Dropout', 'tensorflow.keras.layers.BatchNormalization', 'tensorflow.keras.layers.Conv2D', 'tensorflow.keras.layers.SeparableConv2D', 'tensorflow.keras.layers.MaxPool2D', 'tensorflow.keras.layers.LeakyReLU', 'tensorflow.keras.layers.Activation', 'tensorflow.keras.optimizers.Adam', 'tensorflow.keras.preprocessing.image.ImageDataGenerator', 'tensorflow.keras.callbacks.ModelCheckpoint', 'tensorflow.keras.callbacks.ReduceLROnPlateau', 'tensorflow.keras.callbacks.EarlyStopping', 'tensorflow', 'sklearn.metrics.accuracy_score', 'sklearn.metrics.confusion_matrix', 'logging']"
Match Papers To Tasks,369,682,"['functools.reduce', 'pandas', 'numpy', 're', 'matplotlib.pyplot', 'sklearn.feature_extraction.text.TfidfVectorizer', 'IPython.core.display.display', 'IPython.core.display.HTML']"
Task Question Search,384,41,"['pandas', 'numpy', 'glob.glob', 'json', 'nltk.corpus.stopwords', 'tqdm.auto.tqdm', 're', 'IPython.display.HTML', 'IPython.display.display']"
CORD-19-research-challenge: Relevant doc search,341,1604,"['numpy', 'pandas', 'spacy', 'os', 'spacy.matcher.PhraseMatcher', 'collections.defaultdict']"
II-COVID19-Citation Network,397,1633,"['numpy', 'pandas', 'json', 'os', 'networkx', 'matplotlib.pyplot', 'seaborn']"
CORD-19 Topic Modelling on Abstracts,49,127,"['numpy', 'pandas', 'os', 'nltk', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'string', 'gensim', 'gensim.models', 'sklearn.manifold.TSNE', 'bokeh.plotting.figure', 'bokeh.plotting.output_file', 'bokeh.plotting.show', 'bokeh.models.Label', 'bokeh.io.output_notebook', 'matplotlib.colors', 'matplotlib.pyplot']"
COVID-19 EDA,27,2,[]
COVID-19 - Temperature and Transmission Rates,831,2586,"['numpy', 'pandas', 'seaborn', 'matplotlib.pyplot', ""warnings#currentversionofseaborngeneratesabunchofwarningsthatwe'llignore"", 'os', 'plotly', 'plotly.graph_objects', 'plotly.offline.download_plotlyjs', 'plotly.offline.init_notebook_mode', 'plotly.offline.plot', 'plotly.offline.iplot', 'plotly.offline', 'plotly.express']"
covid-19-mortality,"1,175",2,[]
COVID-19 Ultimate: Chronology + Patients analysis,702,2565,"['numpy', 'pandas', 'pandas_datareader.wb', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'plotly.graph_objects', 'wordcloud.WordCloud', 'plotly.subplots.make_subplots', 'pandas.plotting.register_matplotlib_converters', 'warnings', 'IPython.display.Javascript', 'IPython.core.display.display', 'IPython.core.display.HTML', 'IPython.display.set_matplotlib_formats']"
BIO-NER on COVID 19 data,299,161,"['numpy', 'pandas', 'json', 'os', 'scispacy', 'en_ner_bionlp13cg_md', 'spacy.displacy', 'scispacy.abbreviation.AbbreviationDetector', 'scispacy.umls_linking.UmlsEntityLinker', 'collections.Counter', 'matplotlib.pyplot']"
"""Learning"" Medicine with Word Embeddings ⚕️💊💉  ",91,1912,"['re', 'pandas', 'collections.defaultdict', 'spacy', 'en_core_web_sm', 'numpy', 'matplotlib.pyplot', 'gensim.models.phrases.Phrases', 'gensim.models.phrases.Phraser', 'multiprocessing', 'gensim.models.Word2Vec', 'sklearn.decomposition.PCA']"
kernelcb2b29c22c,17,2,"['nltk.tokenize.sent_tokenize', 'nltk.tokenize.word_tokenize', 'warnings', 'gensim', 'gensim.models.Word2Vec']"
COVID-19-xray-DL,803,5465,"['numpy', 'pandas', 'os', 'fastai.*', 'fastai.vision.*']"
Exploratory Data Analysis covid-19 from eCDC,406,1745,[]
Map Search of Places in CORD-19 Full Text,360,973,['IPython.display.IFrame']
CORD-19 Human Genes Insights,252,305,"['json', 'os', 're', 'sys', 'collections.Counter', 'numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'tqdm.tqdm']"
COVID-19 using TF-IDF,"1,805",17245,"['pandas', 'numpy', 'json', 'math', 'glob', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfTransformer', 'nltk.stem.snowball.SnowballStemmer', 'scipy.spatial.distance', 'matplotlib.pyplotasplt', 'wordcloud.WordCloud', 'ipywidgets', 'IPython.display.Image', 'IPython.display.display', 'IPython.display.HTML']"
Covid-19 epidemiological curves at regional level,666,2012,[]
COVID-19 Pandemic EDA  📊,301,1397,"['numpy', 'pandas', 'os', 'IPython']"
Extract Entities from Abstracts,"1,130",300,"['os', 'scispacy', 'spacy', 'spacy.displacy', 'scispacy.abbreviation.AbbreviationDetector', 'scispacy.umls_linking.UmlsEntityLinker', 'en_core_sci_lg', 'json']"
Demo of using Custom NER model on COVID-19 dataset,643,1642,"['os', 'json', 'warnings', 'spacy', 'matplotlib.pyplot', 'operator']"
CORD-19 Sources unification with pyspark SQL,253,1116,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'glob', 'json', 'pathlib.Path', 'pyspark.SparkContext', 'pyspark.sql.SparkSession', 'pyspark.sql.functions.*']"
Train a Word2Vec,435,329,"['pathlib.Path', 'tqdm.auto.tqdm', 'json', 'spacy', 'gensim.models.Word2Vec']"
CORD-19 Metadata ,272,89,"['matplotlib.pyplot', 'PIL.Image', 'seaborn', 'pandas', 'numpy', 'math', 'sklearn', 'sklearn.model_selection.train_test_split', 'sklearn.metrics.mean_squared_error', 'sklearn.metrics.r2_score', 'sklearn.metrics.mean_absolute_error', 'sklearn.preprocessing', 'sklearn.feature_extraction.text.CountVectorizer', 'time', 'warnings', 'json']"
Viral agents. S100A12 marker.,122,1789,"['IPython.display.Image', 'numpy', 'pandas', 'os', 'json', 'matplotlib.pyplotasplt', 'pronouncing', 'markovify', 're', 'random', 'keras', 'keras.models.Sequential', 'keras.layers.LSTM', 'keras.layers.core.Dense']"
Covid-19,33,205,"['numpy', 'pandas', 'os', 'typing.List', 'typing.Dict', 'typing.Iterable', 'typing.Tuple', 'json', 'tqdm.tqdm', 'spacy', 'spacy.tokens.Span', 'scispacy.abbreviation.AbbreviationDetector', 'scispacy.umls_linking.UmlsEntityLinker', 'glob', 'pickle', 'spacy.displacy', 'spacy.matcher.Matcher', 'collections.Counter', 'matplotlib.pyplot', 'ipywidgets.interact', 'ipywidgets.interactive', 'ipywidgets.fixed', 'IPython.display.Image', 'cv2', 'mpl_toolkits.mplot3d.Axes3D', 'sklearn.decomposition', 'sklearn.datasets', 'sklearn.cluster.KMeans', 'gc', 'en_ner_bc5cdr_md']"
Asking questions with a BM25/BERT,132,2842,"['numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'rank_bm25.BM25Okapi', 'nltk', 'nltk.corpus.stopwords', 're', 'transformers.pipeline', 'torch']"
Utilizing BioBERT for K-means Topic Clustering,208,2,"['numpy', 'pandas', 'os', 'biobert_embedding.embedding.BiobertEmbedding', 'sklearn.preprocessing.MinMaxScaler', 'sklearn.cluster.KMeans', 'matplotlib.pyplot', 'seaborn', 'langdetect.detect', 're', 'textblob.Word', 'gensim.parsing.preprocessing.remove_stopwords', 'nltk', 'nltk.FreqDist', 'string', 'collections', 'nltk.util.ngrams', 'gensim.parsing.preprocessing.STOPWORDS']"
A CORD19 Research Paper Search Engine,249,2094,['cord.ResearchPapers']
Covid-19 citation graph - embedding using DeepWalk,346,125,"['numpy', 'pandas', 'os', 'json', 'multiprocessing.Pool', 'random', 'pickle', 're', 'functools.reduce', 'networkx', 'gensim.models.Word2Vec', 'gc']"
CORD-19-parse-docs-R,141,2,[]
Diagnosing Covid-19,648,11790,"['IPython.display.Image', 'numpy', 'pandas', 'json', 'matplotlib.pyplot', 'seaborn', 'plotly.offline', 'cv2', 'sklearn.feature_extraction', 'sklearn.linear_model', 'sklearn.model_selection', 'sklearn.preprocessing', 'plotly.graph_objs', 'plotly.express', 'os', 'collections.Counter', 'IPython.display.HTML', 'altair', '.v5', 'collections.defaultdict', 'fastai.vision.*', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'nltk.corpus.stopwords', 'shutil', 'glob.glob']"
COVID-19 - Top Scholarly Journals,705,2120,"['numpy', 'pandas', 'os', 'csv', 'matplotlib', 'nltk', 'nltk.corpus.stopwords', 'textblob.TextBlob']"
LDA & Information Visualization from CORD-19,371,300,"['numpy', 'pandas', 'os', 'json', 'glob', 'spacy', 'spacy.lang.en.stop_words.STOP_WORDS', 'spacy.lang.en.English', 'sklearn.feature_extraction.text.CountVectorizer', 're', 'wordcloud.WordCloud', 'matplotlib.pyplot', 'seaborn', 'warnings', 'sklearn.decomposition.LatentDirichletAllocationasLDA']"
Keywords on the subject - Ethical and social,794,447,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'nltk.corpus.stopwords', 'nltk', 're', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.NMF', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.cluster.KMeans', 'sklearn.manifold.TSNE', 'os']"
"COVID-19, Find the Right Research Paper, with tags",378,3556,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 're']"
Topic Modeling (LDA) on CORD-19 Paper Abstracts ,485,374,"['os', 're', 'sys', 'numpy', 'pandas', 'matplotlib.pyplot', 'nltk.corpus.stopwords', 'json', 'time', 'warnings', 'datetime', 'nltk.tokenize.RegexpTokenizer', 'nltk.stem.wordnet.WordNetLemmatizer', 'gensim.corpora.Dictionary', 'gensim.models.LdaModel', 'gensim.models.LdaMulticore']"
Air Temperature and COVID-19,255,75,"['numpy', 'pandas', 'search_func_py.*']"
Covid-19 Launched Treaments by WHO WorldCloud,39,234,"['glob.glob', 'json', 'numpy', 'pandas', 'matplotlib.pyplot', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'os']"
covid-19-incubation-time,70,2,"['os', 'json', 'pandas', 'tqdm.tqdm', 're', 'matplotlib.pyplot', 'matplotlib.style', 'numpy', 'seaborn']"
Covid-19 literature query tool,162,2976,"['numpy', 'pandas', 'IPython.display.Markdown', 'IPython.display.display', 'os']"
Extracting entities linked to UMLS with scispaCy,174,2,"['typing.List', 'typing.Dict', 'typing.Iterable', 'typing.Tuple', 'os', 'json', 'tqdm.tqdm', 'spacy', 'spacy.tokens.Span', 'scispacy.abbreviation.AbbreviationDetector', 'scispacy.umls_linking.UmlsEntityLinker']"
"Searching data using KNN neighbors, topic modeling",347,2950,"['numpy', 'gensim', 'os', 're', 'gensim.utils.simple_preprocess', 'gensim.parsing.preprocessing.STOPWORDS', 'gensim.corpora', 'gensim.models.ldamulticore.LdaMulticore', 'pandas', 'en_core_sci_md', 'spacy', 'spacy.tokenizer.Tokenizer', 'sklearn.neighbors.NearestNeighbors', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'pyLDAvis.gensim']"
Comfirmed bar chart race depending on country,220,13,"['pandas', 'matplotlib.pyplot', 'matplotlib.ticker', 'matplotlib.animation', 'IPython.display.HTML', 'random', 're', 'matplotlib.colors', 'colorsys', 'random.randint', 'warnings']"
COVID-19 what is risk?,212,1635,"['os', 'numpy', 'pandas']"
COVID-19 : Searching for the papers about vaccines,199,93,"['IPython.core.display.display', 'IPython.core.display.HTML', 'pandas', 're', 'ipywidgets']"
Agglomerative Document Clustering on CORD-19,297,3947,"['scipy.cluster.hierarchy.ward', 'scipy.cluster.hierarchy.dendrogram', 'scipy.cluster.hierarchy.fcluster', 'scipy.cluster.hierarchy.single', 'scipy.cluster.hierarchy.complete', 'sklearn.metrics.pairwise.cosine_similarity', 'sklearn.metrics.silhouette_score', 'sklearn.feature_extraction.text.TfidfVectorizer', 'nltk', 'nltk.stem.WordNetLemmatizer', 'pandas', 'numpy', 'os', 'json', 'matplotlib.pyplot', 'tqdm.tqdm', 'copy.deepcopy', 'time']"
Using Whoosh for Indexing and Querying,210,1281,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 'whoosh.index.create_in', 'whoosh.fields.*', 'whoosh.qparser.QueryParser', 'whoosh.query.*']"
Search COVID-19 papers for particular information ,137,16271,"['numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'nltk', 'nltk.corpus.stopwords']"
Weather and Covid 19 Outbreak ,653,4106,"['IPython.display.Video', 'IPython.display.Image', 'numpy', 'pandas', 'os', 'json', 'tqdm.tqdm']"
KEYWORDS EXTRACTION AND TEXT CLUSTERING COVID-19,45,1376,"['numpy', 'pandas', 'os', 'warnings', 're', 'nltk', 'nltk.stem.porter.PorterStemmer', 'nltk.tokenize.RegexpTokenizer', 'nltk.corpus.stopwords', 'nltk.stem.wordnet.WordNetLemmatizer', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'matplotlib.pyplot', 'seaborn', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfTransformer', 'scipy.sparse.coo_matrix', 'sklearn', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.decomposition.PCA', 'mpl_toolkits.mplot3d.Axes3D']"
COVID USA,26,3492,"['pandas', 'numpy', 'matplotlib.pyplot', 'matplotlib.ticker', 'pycountry_convert', 'folium', 'branca', 'datetime.datetime', 'datetime.timedelta', 'datetime.date', 'scipy.interpolate.make_interp_spline', 'scipy.interpolate.BSpline', 'plotly.express', 'json', 'requests', 'keras.layers.Input', 'keras.layers.Dense', 'keras.layers.Activation', 'keras.layers.LeakyReLU', 'keras.models', 'keras.optimizers.RMSprop', 'keras.optimizers.Adam']"
"abstracts clustering, LDA, NMF, SciBERT embeddings",314,1045,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.KMeans', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.NMF', 'sklearn.decomposition.LatentDirichletAllocation', 'transformers.*', 'tensorflow', 'tqdm.tqdm', 'umap', 'bokeh.plotting.figure', 'bokeh.plotting.show', 'bokeh.plotting.output_notebook', 'bokeh.models.HoverTool', 'bokeh.models.ColumnDataSource', 'bokeh.models.CategoricalColorMapper', 'bokeh.palettes.Spectral10', 'bokeh.palettes.Category20c', 'bokeh.palettes.magma']"
Abstract Summarization with Transformers & BART,164,1341,"['numpy', 'pandas', 'transformers.pipeline', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML', 'nltk.PorterStemmer', 'tqdm.notebook.tqdm_notebook']"
Covid-19 Mentioned Drugs Analysis Vol 3.0,260,1727,"['numpy', 'pandas', 'glob.glob', 'json', 'matplotlib.pyplot', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'nltk.corpus.stopwords', 'nltk', 'nltk.word_tokenize', 'nltk.sent_tokenize', 'nltk.stem.LancasterStemmer', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.PorterStemmer', 'textblob.TextBlob', 'tqdm.notebook.tqdm', 'plotly.express', 'plotly.figure_factory', 'plotly.graph_objs', 'os']"
Question answering using Semantic roles,96,63,"['pandas', 'spacy.displacy', 're', 'termcolor.colored', 'collections.Counter']"
"summary page virus genetics, origin, and evolution",206,3111,"['numpy', 'pandas', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML', 'nltk.PorterStemmer']"
ElasticSearch/SciBERT ensemble,264,4610,"['os', 'pandas', 'json', 'pprint', 'collections.Counter', 're', 'numpy', 'tqdm.notebook.tqdm', 'datetime', 'random', 'string', 'sys', 'tensorflow', 'collections', 'nltk', 'bert.tokenization', 'tabulate.tabulate', 'IPython.display.HTML', 'IPython.display.display', 'ipywidgets']"
Covid(RAN) - Research & Analytics Notebook,122,6601,"['pandas', 'matplotlib.pyplot', 'numpy', 'glob#Retrievethefile/pathname', 're#Regular-Expressiontofetchdatafromtext', 'json#ReadingtheJSONDocuments', 'string#Fordoingstringoperations', 'sklearn.feature_extraction.text.HashingVectorizer#PerformingHashingVectorization', 'sklearn.feature_extraction.text.TfidfVectorizer#Tfidfvectorfortextanalysis', 'sklearn.model_selection.train_test_split#Fortrain-test-splitforthedataset', 'sklearn.ensemble.RandomForestClassifier#Random-forest-classifier', 'sklearn.neighbors.KNeighborsClassifier#KNNClassifier', 'sklearn.svm#SupportVectorMachineclassifier', 'sklearn.metrics#Moduletocheckthemodelaccuracy', 'keras.models.Sequential', 'keras.layers.Dense', 'keras.layers.Dropout', 'keras.optimizers.SGD', 'plotly.express', 'plotly.offline', 'sklearn.feature_extraction.text.HashingVectorizer', 'sklearn.model_selection.train_test_split', 'sklearn.ensemble.RandomForestClassifier', 'sklearn.metrics', 'sklearn.svm', 'sklearn.neighbors.KNeighborsClassifier', 'matplotlib.image']"
Insights - focus and experimental findings,91,11679,"['numpy', 'pandas', 'os', 'glob', 'json', 'nltk', 'nltk.word_tokenize', 'nltk.corpus.stopwords', 'random', 'matplotlib.pyplot', 'nltk.corpus.wordnet', 'itertools']"
DoxCompass-Visualization and EDA,82,639,"['numpy', 'pandas', 'string', 'json', 'nltk', 'os', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.cluster.AgglomerativeClustering', 'sklearn.metrics.pairwise', 'scipy.sparse.hstack', 'sklearn.manifold.TSNE', 'matplotlib.pyplot', 'random.shuffle', 'gensim.models', 'seaborn', 'logging', 'bokeh.io.output_notebook', 'bokeh.io.show', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.manifold.Isomap', 'sklearn.manifold.MDS', 'sklearn.manifold.SpectralEmbedding', 'sklearn.preprocessing', 'sklearn.pipeline.Pipeline', 'sklearn.pipeline.FeatureUnion', 'sklearn.decomposition.NMF', 'sklearn.decomposition.LatentDirichletAllocation', 'operator', 'warnings', 'fa2.ForceAtlas2', 'gensim', 'gensim.models.Phrases', 'gensim.models.word2vec.LineSentence', 'gensim.corpora.Dictionary', 'gensim.corpora.MmCorpus', 'gensim.models.ldamulticore.LdaMulticore', 'pyLDAvis', 'pyLDAvis.gensim', 'igraph.Graph', 'igraph.plot', 'networkx', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.models.CustomJS', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.models.widgets.Slider', 'bokeh.models.widgets.Dropdown', 'bokeh.io.output_file', 'bokeh.transform.transform', 'bokeh.plotting.figure', 'bokeh.layouts.column', 'bokeh.layouts.row', 'bokeh.models.RadioButtonGroup', 'bokeh.models.TextInput', 'bokeh.layouts.gridplot', 'bokeh.models.Div', 'bokeh.models.Paragraph', 'bokeh.layouts.widgetbox']"
COVID-19 : Biomedical Semantic Search - Q&A System,208,557,"['numpy', 'pandas', 'glob', 'json', 're', 'os', 'warnings', 'matplotlib.pyplot', 'sklearn.decomposition.PCA', 'sklearn.manifold.TSNE', 'sklearn.metrics.pairwise.cosine_similarity', 'tqdm.tqdm_notebook', 'tqdm.tnrange', 'tqdm.auto.tqdm', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.models.CustomJS', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.transform.transform', 'bokeh.io.output_notebook', 'bokeh.plotting.figure', 'bokeh.layouts.column', 'bokeh.models.RadioButtonGroup', 'bokeh.models.TextInput', 'bokeh.layouts.gridplot', 'bokeh.models.Div', 'bokeh.models.Paragraph', 'bokeh.layouts.widgetbox', 'IPython.display.HTML', 'notebook', 'ipywidgets.interact', 'ipywidgets.interactive', 'ipywidgets.fixed', 'ipywidgets.interact_manual', 'ipywidgets.interactive_output', 'ipywidgets.VBox', 'IPython.html.widgets', 'IPython.display.display', 'IPython.display.Image', 'IPython.display.Markdown', 'IPython.display.clear_output', 'spacy', 'en_core_web_md', 'flair.embeddings.ELMoEmbeddings', 'flair.embeddings.PooledFlairEmbeddings', 'flair.embeddings.Sentence', 'flair.embeddings.DocumentPoolEmbeddings', 'typing.List', 'sklearn.cluster.MiniBatchKMeans', 'matplotlib.pyplotasplt', 'seaborn', 'random', 'ast.literal_eval', 'cdqa.utils.filters.filter_paragraphs', 'cdqa.pipeline.QAPipeline', 'cdqa.utils.download.download_model']"
CORD-19 Citation Network with Deduping,234,5829,"['pyspark.sql.SparkSession', 'pyspark.sql.functionsasF', 'matplotlib.pyplot', 'pyhash', 'sys', 'pyspark.ml.linalg.Vectors', 'pyspark.ml.linalg.VectorUDT', 'pyspark.ml.feature.MinHashLSH', 'networkx', 'pandas', 'tqdm.tqdm', 'pyspark.sql.Window', 'pyspark.sql.typesasT', 'gc']"
CORD-19 Articles Clustering,139,1049,"['pandas', 'numpy', 'matplotlib.pyplotasplt', 'tensorflow', 'tensorflow_hub', 'plotly.graph_objects', 'sklearn.cluster.KMeans', 'matplotlib.cm', 'sklearn.decomposition.PCA', 'datetime.datetime', 'plotly.express', 'networkx', 'sklearn.metrics.pairwise.cosine_similarity', 'igraph', 'plotly.graph_objs', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'nltk.tokenize.RegexpTokenizer', 'wordcloud.WordCloud']"
Paper_and_Lines_extractor,100,418,"['numpy', 'os', 'json', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 're', 'string', 'sklearn.metrics.pairwise.cosine_similarity', 'rank_bm25.BM25Okapi', 'spacy', 'scispacy', 'nltk.tokenize.sent_tokenize', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'pandas', 'en_core_sci_md', 'IPython.display.display', 'IPython.display.Markdown']"
Training Set Labeling Jump-start (UMLS Linking),164,2531,"['glob.glob', 'json', 'pandas', 'tqdm.notebook.tqdm', 'spacy', 'scispacy', 'en_core_sci_sm', 'scispacy.umls_linking.UmlsEntityLinker', 'scispacy.abbreviation.AbbreviationDetector', 'statistics.mean', 'math', 'plotly_express']"
CORD-19: Disease-Chemical Co-occurrence Matrix,231,928,"['scispacy', 'en_ner_bc5cdr_md', 'MulticoreTSNE.MulticoreTSNEasTSNE', 'os', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 'sklearn.feature_extraction.text.TfidfVectorizer', 'matplotlib.pyplot', 'spacy', 'spacy.displacy', 'collections.Counter', 'pickle', 'collections.defaultdict', 'seaborn']"
COVID-19 Papers Text Summarization,91,1152,[]
Medical NER : Using Spacy,531,1350,"['json', '__future__.unicode_literals', '__future__.print_function', 'random', 'pathlib.Path', 'spacy.util.minibatch', 'spacy.util.compounding', 'spacy', 'sys', 'numpy', 'pandas', 'os', 'collections.Counter', 'matplotlib.pyplot']"
BioBERT Embeddings + Demo,211,1986,"['torch', 'transformers.BertTokenizer', 'transformers.BertModel', 'argparse', 'logging', 'transformers.BertConfig', 'transformers.BertForPreTraining', 'transformers.load_tf_weights_in_bert', 'sklearn.metrics.pairwise.cosine_similarity', 'umap', 'os', 'json', 'bokeh.plotting.figure', 'bokeh.plotting.show', 'bokeh.plotting.output_notebook', 'bokeh.models.HoverTool', 'bokeh.models.ColumnDataSource', 'bokeh.models.CategoricalColorMapper', 'bokeh.palettes.Spectral10', 'bokeh.palettes.Category20c', 'bokeh.palettes.magma', 'pandas', 'collections', 'en_core_sci_sm']"
[CORD-19] Parse Data to Flat Format ,158,210,"['logging', 'gc', 'glob', 'multiprocessing', 'os', 'typing.Tuple', 'numpy', 'pandas', 'tqdm.notebook.tqdm']"
Exploring_corona_abstracts,146,1665,"['numpy', 'pandas', 'os', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'scispacy', 'spacy', 'en_core_sci_sm', 'scipy.spatial.distance.jensenshannon', 'joblib', 'pyLDAvis', 'pyLDAvis.sklearn']"
Analyzing the COVID-19 corpus with LDA and PCoA ,241,588,"['numpy', 'pandas', 'json', 'os', 'nltk.tokenize.word_tokenize', 'gensim.sklearn_api.phrases.PhrasesTransformer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'pyLDAvis.enable_notebook', 'pyLDAvis.display', 'pyLDAvis.sklearn']"
III-COVID19-Collecting Virus Proteins from Uniprot,266,1656,"['pandas', 'matplotlib.pyplot', 'json']"
get_data_from_all_papers,144,2,"['numpy', 'pandas', 'json', 'os']"
COVID-19 Reference public data,303,2,[]
covid-19_create_dataset,210,31,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys']"
ACE2_protein_receptor_information,208,46,"['numpy', 'pandas']"
cord_19 ,63,2,"['os', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'json']"
COVID-19 in OH: measuring the response 2020_03_16,190,1505,"['numpy', 'pandas', 'sklearn.model_selection.train_test_split', 'matplotlib.pyplot', 'matplotlib', 'seaborn', 'warnings', 'datetime.timedelta', 'datetime.date']"
Relevance: TFIDF ngrams of tagged sentences,23,40278,[]
A Brief Talk on COVID-19,102,9274,"['numpy', 'pandas', 'glob', 'json', 'matplotlib.pyplot', 'os', 'IPython.display.Image', 'sklearn.preprocessing.StandardScaler']"
"A Simple, Direct COVID-19 QA engine",48,9359,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys', 'urllib', 'pickle', 'gc', 're', 'random', 'os.path', 'summa.summarizer.summarize', 'summa.keywords.keywords', 'ast.literal_eval', 'cdqa.utils.filters.filter_paragraphs', 'cdqa.utils.download.download_model', 'cdqa.utils.download.download_bnpp_data', 'cdqa.pipeline.cdqa_sklearn.QAPipeline', 'cdqa.utils.converters.generate_squad_examples', 'vaderSentiment.vaderSentiment.SentimentIntensityAnalyzer', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML']"
Getting_Started_with_Cosine_Similarity,61,1194,"['pandas', 'numpy', 'matplotlib.pyplot', 'seaborn', 're', 'json', 'gc', 'glob.glob', 'scispacy', 'spacy', 'en_ner_bc5cdr_md', 'sklearn.metrics.pairwise.cosine_similarity', 'IPython.core.display.display', 'IPython.core.display.HTML']"
How Good is a Drug Against The Corona Virus,120,2218,[]
COVID-19 Data Preprocessing,191,773,"['numpy', 'pandas', 'os', 'json', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'PIL.Image', 're', 'matplotlib.pyplot', 'matplotlib.style']"
Hybrid Search Model - Annoy bio-w2v + BM25 EDA,74,1451,"['sklearn.feature_extraction.text.CountVectorizer', 'sklearn.metrics.pairwise.cosine_similarity', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.PorterStemmer', 'nltk.tokenize.word_tokenize', 'sklearn.cluster.DBSCAN', 'nltk.corpus.stopwords', 'collections.Counter', 'matplotlib.pyplot', 'tensorflow', 'pyLDAvis.gensim', 'tqdm.notebook.tqdm', 'seaborn', 'pandas', 'numpy', 'pyLDAvis', 'gensim', 'spacy', 'os', 'gensim.models.KeyedVectors', 'gensim.models.keyedvectors', 'multiprocessing', 're', 'json', 'pprint.pprint', 'copy.deepcopy', 'annoy.AnnoyIndex', 'functools.lru_cache', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'nltk', 'rank_bm25.BM25Okapi', 'typing.List', 'typing.NoReturn', 'typing.Union', 'typing.Tuple', 'typing.Optional', 'typing.Text', 'typing.Generic', 'typing.Callable', 'typing.Dict', 'pickle', 'gzip', 'random', 'datetime.datetime', 'collections.defaultdict', 'unidecode', 'gensim.summarization.bm25.BM25', 'IPython.display.display']"
Search system for top article using wikipedia DB,99,811,"['numpy', 'pandas', 'os', 'ipywidgets.interact', 'ipywidgets', 'IPython.display.display', 'subprocess.check_output', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib', 'matplotlib.pyplot', 'plotly.express', 'pprint']"
Sentence similarity,96,609,"['numpy', 'json', 'os', 'tqdm.tqdm', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'nltk', 'tensorflow.compat.v1', 'tensorflow_hub', 'matplotlib.pyplot']"
COVID-related v4,136,1105,"['pandas', 'numpy', 'matplotlib.pyplot', 'seaborn', 'sklearn.model_selection.train_test_split', 'sklearn.linear_model.LinearRegression', 'sklearn.metrics']"
CORD-19 ngrams insights origin evolution,127,6445,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'tqdm.notebook.tqdm', 'nltk.corpus.stopwords', 'numpy', 'random', 'string', 're', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'pandas', 'collections', 'nltk.util.ngrams', 'nltk', 'networkx', 'seaborn', 'warnings']"
Visualise and Calculate word frequencies COVID-19,374,221,[]
COVID19_ABSG_AD,31,502,"['numpy', 'pandas', 'os', 'pprint', 'collections.OrderedDict', 'random', 'networkx', 'matplotlib.pyplot', 'matplotlib.font_manager.weight_dict']"
CORONA Challenge - Analysing Incubation Time in R,187,3242,[]
CORD-19 Keyword Search in Abstracts,94,137,"['os', 'numpy', 'pandas', 'time', 'warnings']"
Participations by country,55,2,"['os', 'json', 'tqdm.tqdm', 'pandas', 'collections.Counter', 'pycountry', 'plotly.offline.download_plotlyjs', 'plotly.offline.init_notebook_mode', 'plotly.offline.plot', 'plotly.offline.iplot', 'plotly.graph_objs']"
Unsupervised Text Segment Group Discovery,62,203,[]
Build CSV of Reference Entries,42,206,"['pandas', 'os', 'json']"
Worldwide_Data_and_Graphs,146,526,"['numpy', 'pandas', 'pandas_profiling.ProfileReport', 'os']"
CORD-19 Simple Parsing to Dataframes,290,395,"['numpy', 'pandas', 'json', 'os', 'os.walk']"
"CORD-19:EDA,duplicated papers discovery,resolution",65,2810,"['os', 'pandas', 'numpy', 'functools.reduce', 'matplotlib.pyplot', 'time', 'IPython.display.display']"
Parquet and BigQuery dataset for CORD-19,106,175,"['pyspark.sql.functions.lit', 'pyspark.sql.types.(', 'pyspark.sql.SparkSession', 'pandas', 're', 'glob', 'google.cloud.storage', 'google.cloud.bigquery']"
COVID-19 clustering (Infersent-UMAP-HDBScan),73,898,"['numpy', 'pandas', 'glob', 'json', 'ast.literal_eval', 'torch', 'InferSent.models.InferSent', 'nltk.tokenize.sent_tokenize', 'umap.umap_', 'matplotlib.pyplot', 'seaborn', 'hdbscan']"
Naive Lookup / Save Documents,105,1297,"['pandas', 'numpy', 'matplotlib.pyplot', 'glob', 'time', 'shutil', 'os', 'stat', 'sys']"
Interactive Abstract and Expert Finder,182,3096,"['numpy', 'pandas', 'os', 'glob', 'json', 'pickle', 'string', 'nltk', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'nltk.tokenize.sent_tokenize#', 'nltk.tokenize.word_tokenize', 'nltk.corpus.stopwords', 'time', 'multiprocessing.Pool', 'multiprocessing', 'collections.Counter', 'itertools.chain', 'operator', 'gensim.models.phrases.Phrases', 'gensim.models.phrases.Phraser', 'gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument', 'itertools', 'collections', 'random', 'gensim.corpora.Dictionary', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.metrics.pairwise.cosine_similarity', 'scipy.sparse', 'corextopic.corextopicasct', 'corextopic.vis_topicasvt#jupyternotebookswillcomplainmatplotlibisbeingloadedtwice', 'matplotlib.pyplot', 'ipywidgets.interact', 'ipywidgets']"
CORD-19: Search Papers Referring to Antivirals,72,2417,"['numpy', 'pandas', 'os', 'json', 'glob', 'matplotlib.pyplot', 'sklearn.feature_extraction.text.CountVectorizer', 'spacy']"
coronavirus_jargon_vocabulary,208,729,"['numpy', 'pandas', 'os', 'json', 'multiprocessing.Pool', 'random', 'pickle', 're', 'functools.reduce']"
COVID19 Challenge Notebook,214,335,"['numpy', 'pandas', 'os', 'json', 'nltk', 'nltk.corpus.stopwords', 'nltk.stem.PorterStemmer', 'nltk.tokenize.word_tokenize', 'nltk.tokenize.sent_tokenize', 'spacy']"
Pandemic Ethics - Covid19,500,9358,"['IPython.display.Image', 'numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'plotly.graph_objs', 'plotly.offline', 'plotly.express', 'os', 'json', 'wordcloud.WordCloud', 'wordcloud.ImageColorGenerator']"
CORD-19 Duplicate body_text.text,43,292,"['json', 'pathlib.Path', 'hashlib', 'collections.defaultdict']"
Quick summary and integrated task detail,120,19900,[]
Exploring_corona_competition,86,1738,"['numpy', 'pandas', 'os', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'scispacy', 'spacy', 'en_core_sci_sm', 'scipy.spatial.distance.jensenshannon', 'joblib', 'pyLDAvis', 'pyLDAvis.sklearn']"
CORD-19-research-challenge - Using NLP Search,165,178,"['numpy', 'pandas', 'json', 'os', 'pprint', 'copy.deepcopy', 'tqdm.notebook.tqdm', 're', 'nltk', 'nltk.tokenize.word_tokenize', 'nltk.stem.lancaster.LancasterStemmer', 'tflearn', 'tensorflow', 'random', 'string', 'unicodedata', 'sys', 'sklearn.metrics.precision_score', 'whoosh.fields.Schema', 'whoosh.fields.TEXT', 'whoosh.fields.ID', 'whoosh.index']"
COVID Papers,277,73,"['numpy', 'pandas', 'os', 'glob', 'json', 'os.path', 'PIL.Image', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'matplotlib.pyplot', 'warnings']"
bag of words apply for abstract and text fields,74,529,"['nltk', 'random', 'string', 'bs4', 'urllib.request', 're', 'os', 'numpy', 'pandas']"
"CORD-19: EDA, LDA and BERT (unsupervised)",430,1473,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'pathlib.Path', 'glob', 'json', 'collections.defaultdict', 'nltk.corpus.stopwords']"
01 Exploring The Folder-Structure,61,440,"['os', 'pandas']"
CORVID-19 TRACKING THE KENYA SPREAD,91,2,"['google.cloud.storage', 'google.cloud.bigquery']"
Checkout the COVID 19 Word2Vec model,179,81,['gensim.models.Word2Vec']
CORD-19 : publication analysis,132,249,"['pandas', 'glob', 'datetime', 'json', 're', 'numpy', 'bokeh.io.output_notebook', 'bokeh.io.push_notebook', 'bokeh.io.show', 'bokeh.io.save', 'bokeh.io.output_file', 'bokeh.plotting.figure', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.DatetimeTickFormatter', 'bokeh.models.NumeralTickFormatter', 'bokeh.palettes.Set1_9aspalette', 'ipywidgets.interact', 'ipywidgets.IntSlider', 'ipywidgets']"
War on Covid-19,123,7732,"['IPython.display.Image', 'numpy', 'pandas', 'time', 'datetime.datetime', 'datetime.timedelta', 'matplotlib.pyplot', 'seaborn', 'os', 'json']"
COVID-19: Journal Analysis and Wordcloud,115,224,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'plotly.graph_objects', 'plotly.offline', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings']"
COVID-19 - Russia,284,317,"['numpy', 'pandas', 'seaborn', 'matplotlib.pyplot', 'os', 'pandas.plotting.register_matplotlib_converters']"
pd.read_csv,140,67,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'collections.Counter', 'functools.reduce', 'nltk', 'nltk.corpus.stopwords', 're', 'nltk.tokenize.word_tokenize', 'string']"
SpaCy: Aspect Based and Compound Nouns Key Words,282,241,"['os', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings', 're', 'random', 'nltk', 'matplotlib', 'matplotlib.ticker.PercentFormatter', 'seaborn', 'plotly.offline', 'plotly.graph_objs', 'plotly.tools', 'nltk.tokenize.RegexpTokenizer', 'nltk.stem.porter.PorterStemmer', 'gensim.corpora', 'gensim.models', 'gensim', 'bs4.BeautifulSoup', 'nltk.tokenize.WordPunctTokenizer', 'datetime', 'spacy', 'spacy.displacy', 'en_core_web_sm', 'tqdm.tqdm']"
CoronaVirus,108,206,"['numpy', 'pandas', 'PyPDF2', 'os', 'json']"
First-Notebook-CORD-19-Research,130,83,"['os', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings', 'ipywidgets.interact']"
CORD-19 beginner EDA,648,636,"['os', 'numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'json', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings']"
Convert COVID-19 papers to Entity Vectors,27,1480,"['os', 'sys', 'csv', 'string', 'datetime.datetimeasdt', 'json', 'hashlib', 'warnings', 'pickle', 'math', 'time', 'pandas', 'numpy', 'scipy', 'scipy.sparse', 'os.listdir', 'pathlib.Path#python3way', 'os.path.isfile', 'os.path.join', 'scispacy', 'spacy']"
COVID-2019-ID Paper version,35,1679,"['numpy', 'pandas', 'os', 'sys', 'matplotlib.pyplot', 'glob', 'json', 're', 'matplotlib.cm', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.PCA', 'sklearn.manifold.TSNE', 'nltk.stem.porter.PorterStemmer', 'nltk']"
Languages...,37,1240,"['numpy', 'pandas', 'os', 'langdetect.detect', 'tqdm.auto.tqdm', 'glob', 'json', 'collections']"
COVID-19 text mining,45,3545,"['pandas', 'numpy', 'json', 'math', 'glob', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfTransformer', 'scipy.spatial.distance', 'wordcloud.WordCloud', 'nltk', 'nltk.probability.FreqDist', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.stopwords', 'nltk.stem.PorterStemmer', 'nltk.pos_tag', 'gensim', 'gensim.models.Word2Vec', 'gensim.test.utils.common_texts', 'gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument', 'seaborn', 'matplotlib.pyplot', 'string', 'spacy', 'collections.Counter', 'os', 'multiprocessing', 're', 'matplotlib.style', 'sklearn.cluster.KMeans']"
COVID-19 Genome Variations,75,455,"['numpy', 'pandas', 'search_func_py.*']"
COVID19 Temporal Summarization Tool Version 1,116,1564,"['numpy', 'pandas', 'os', 'json', 'p_tqdm.p_map', 'dateparser.search.search_dates', 'pandarallel.pandarallel', 'pickle', 'spacy.tokenizer.Tokenizer', 'spacy.lang.en.English', 'gensim.test.utils.common_texts', 'gensim.test.utils.get_tmpfile', 'multiprocessing', 'gensim.models.Word2Vec', 'time.time#Totimeouroperations', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'collections.defaultdict', 'scipy.spatial', 'matplotlib', 'matplotlib.pyplot', 'matplotlib.pyplot.figure', 'sklearn.manifold.TSNE', 'math', 'sklearn.cluster.KMeans']"
Combine Embedding Data and Citations Article,44,251,"['numpy', 'pandas', 'os', 'scipy', 'scipy.spatial']"
COVID-19 EDA including NLP with Spacy,68,1917,"['os', 'numpy', 'pandas', 'json', 'tqdm.notebook.tqdm', 'matplotlib.pyplot', 'matplotlib.style', 're', 'spacy', 'spacy.matcher.Matcher', 'seaborn']"
Improve quiries using W2V algorithms,146,6757,"['numpy', 'pandas', 'os', 'json', 'nltk.tokenize.RegexpTokenizer', 'nltk.corpus.stopwords', 'nltk', 'gensim.models.Word2Vec', 'gensim', 're']"
Train Fasttext on COVID papers,78,186,"['numpy', 'pandas', 'fasttext', 're', 'os', 'pathlib.Path', 'gc', 'collections.Counter', 'nltk.corpus.stopwords']"
COVID-19 Recent Questions,46,2484,"['numpy', 'pandas', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML', 'nltk.PorterStemmer']"
Exploratory data analysis via NLP,177,1914,"['numpy', 'pandas', 'plotly.express', 'matplotlib.pyplot', 'sklearn.feature_extraction.text.TfidfVectorizer#tf-idfisacommonwayofturningatextintoavectoroftermfrequencies.Textsthataresemanticallyclosewillbecloseinthis(high-dimensional)space', 'sklearn.manifold.TSNE#t-SNEisadimensionalityreductiontoolwhichisoptimizedtopreservedistances', 'sklearn.manifold.i.e.pointsthatarecloseinthehigh-dimensionalspaceshouldbecloseinthelow-dimensionalspaceandviceversa', 'sklearn.cluster.DBSCAN#densitybasedclusteringmethod.Itgroupstogetherpointsthatarecloselypackedtogether(pointswithmanynearbyneighbors)', 'sklearn.cluster.markingasoutlierspointsthatliealoneinlow-densityregions(source:Wikipedia)', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator#fordrawingwordcloudsandalsosettingstopwordsforvectorization']"
Most mentioned antivirals 622022,58,1232,"['pandas', 'numpy', 'json', 'os.path', 're', 'distance', 'matplotlib.pyplot', 'itertools.combinations']"
start with covid-19 data,90,29,"['numpy', 'pandas', 'nltk', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'nltk.corpus.stopwords', 'string.punctuation', 'nltk.probability.FreqDist', 'json', 'glob']"
COVID-19: data_qa,87,1038,"['numpy', 'pandas', 'json', 'os.path', 'tqdm.notebook.trange', 'tqdm.notebook.tqdm']"
COVID-19,21,520,"['json', 'os', 'pickle']"
COVID-19 Russia details,105,221,"['json', 'random', 'urllib.request.urlopen', 'numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'plotly.graph_objs', 'plotly.figure_factory', 'calmap', 'folium', 'pandas.plotting.register_matplotlib_converters', 'warnings', 'IPython.display.Javascript', 'IPython.core.display.display', 'IPython.core.display.HTML']"
Covid-19 NLP word-network and page-ranking,119,1666,[]
COVID-19 (Task 01),101,2362,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 (Task 06),40,2141,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 Word Embedding Approach,122,1149,"['json', 'pandas', 'os.listdir', 'os.path.isfile', 'os.path.join', 'tqdm.tqdm', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 're', 'gensim']"
[CORD-19] Embeddings 📙 from abstracts with SpaCy ,53,2,"['os', 'spacy', 'spacy.pipeline.merge_entities', 're', 'numpy', 'pandas', 'string', 'unidecode', 'nltk', 'nltk.corpus.wordnet', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.tokenize.word_tokenize', 'gensim.models.Word2Vec', 'tqdm.tqdm', 'pathlib.Path', 'gensim.models.FastText', 'glove.Corpus', 'glove.Glove']"
symptoms word cloud,69,867,"['os', 're', 'json', 'tqdm.tqdm', 'pandas', 'collections.Counter', 'stop_words.get_stop_words', 'wordcloud.WordCloud', 'matplotlib.pyplot']"
Detecting and Visualizing covid-19,114,51,"['pandas', 'seaborn', 'numpy', 'geopandas', 'matplotlib.pyplot', 'shapely.geometry.Point', 'shapely.geometry.Polygon', 'IPython.display.display']"
[CORD-19] Embeddings 📙 from abstracts with SpaCy ,218,2,"['os', 'spacy', 'spacy.pipeline.merge_entities', 're', 'numpy', 'pandas', 'string', 'unidecode', 'nltk', 'nltk.corpus.wordnet', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.tokenize.word_tokenize', 'gensim.models.Word2Vec', 'tqdm.tqdm', 'pathlib.Path']"
NG-EDA-COVID-19-v2,74,2162,"['os', 'json', 're', 'requests', 'warnings', 'math', 'numpy', 'pandas', 'scipy', 'scipy.stats', 'sklearn.metrics', 'sklearn.utils.shuffle', 'gensim.models.Word2Vec', 'sklearn.cluster.KMeans', 'sklearn.decomposition.PCA', 'nltk', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.stem.WordNetLemmatizer', 'nltk.sentiment.vader.SentimentIntensityAnalyzer', 'IPython.display.HTML', 'IPython.core.interactiveshell.InteractiveShell', 'pyspark.sql.SparkSession', 'pyspark.sql.types.*', 'pyspark.sql.functions.*', 'pyspark.sql.functions']"
COVID-19 World Statistics,56,4745,"['pandas', 'numpy', 'matplotlib.pyplot', 'csv', 'os']"
Extract Tika cTAKES Features,84,27,"['tika.parser', 'pandas', 'json', 'tqdm.tqdm_notebookastqdm']"
Covid-19 Analysis,34,50,"['numpy', 'pandas', 'os', 'json', 'tqdm.tqdm', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'tqdm.tqdm_notebook', 'seaborn', 'en_core_web_sm', 'sklearn.metrics.pairwise.cosine_similarity', 'gensim', 're', 'gensim.utils.simple_preprocess', 'gensim.parsing.preprocessing.STOPWORDS', 'gensim.corpora', 'gensim.models.ldamulticore.LdaMulticore', 'en_core_sci_md', 'spacy', 'spacy.tokenizer.Tokenizer', 'sklearn.neighbors.NearestNeighbors', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'pyLDAvis.gensim']"
COVID-19 - Interactive Cluster Graph,91,1636,"['numpy', 'pandas', 'json', 'glob', 'scipy.spatial.distance.cdist', 'time', 'sys', 'tqdm', 're', 'nltk', 'spacy', 'gensim', 'nltk.corpus.stopwords', 'nltk.stem.wordnet.WordNetLemmatizer', 'nltk.stem.PorterStemmer', 'sklearn.feature_extraction.text.HashingVectorizer#Vectorizorforthewordsintheabstract', 'sklearn.feature_extraction.text.TfidfVectorizer#Vectorizorforthetextintheabstract(tf-idf)', 'sklearn.manifold.TSNE', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.cluster.KMeans', 'sklearn.metrics', 'matplotlib.pyplot', 'seaborn', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.models.CustomJS', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.transform.transform', 'bokeh.io.output_notebook', 'bokeh.plotting.figure', 'bokeh.layouts.column', 'bokeh.models.RadioButtonGroup', 'bokeh.models.TextInput', 'bokeh.layouts.gridplot', 'bokeh.models.Div', 'bokeh.models.Paragraph', 'bokeh.layouts.widgetbox']"
Papers on Virus Genetics,167,978,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Enigma Covid-19,58,370,"['numpy', 'pandas', 'glob', 'json']"
BM25 Search + Query Similarity Ranking,105,1047,"['numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'rank_bm25.BM25Okapi', 'nltk', 'nltk.corpus.stopwords', 're', 'os', 'json', 'glob', 'sys', 'tqdm.tqdm', 'scispacy', 'spacy', 'en_core_sci_lg', 'scipy.spatial.distance']"
COVID parameter study - India & others,67,4550,"['pandas', 'numpy', 'scipy', 'matplotlib.pyplotasplt', 'seaborn', 'scipy.stats', 'scipy.optimize.minimize', 'scipy.optimize.curve_fit', 'scipy.optimize.differential_evolution', 'warnings', 'IPython.display.Image', 'sklearn.preprocessing.MinMaxScaler', 'sklearn.cluster.DBSCAN', 'operator']"
naive LSTM model test for covid19,187,479,"['pandas', 'matplotlib.pyplot', 'numpy', 'datetime', 'tensorflow', 'math']"
Search functions for cord19-challenge,122,1805,"['json', 'nltk', 'matplotlib.pyplot', 'pandas', 'nltk.corpus.stopwords', 'collections.Counter', 'sklearn.feature_extraction.text.CountVectorizer', 'gensim.models.Word2Vec', 'numpy', 'gensim', 'time', 'gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument']"
Browsing research papers with a BM25 search engine,34,3782,"['IPython.display.Image', 'numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'rank_bm25.BM25Okapi', 'nltk', 'nltk.corpus.stopwords', 're', 'IPython.display.display']"
COVID-19 Dataset : Gaining actionable insights 📊,55,9279,"['os', 'gc', 're', 'folium', 'scipy.stats', 'warnings', 'math', 'numpy', 'scipy', 'pandas', 'pycountry', 'sklearn.metrics', 'sklearn.utils.shuffle', 'gensim.models.Word2Vec', 'sklearn.cluster.KMeans', 'sklearn.decomposition.PCA', 'nltk', 'textblob.TextBlob', 'wordcloud.WordCloud', 'nltk.corpus.wordnet', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.stem.WordNetLemmatizer', 'nltk.sentiment.vader.SentimentIntensityAnalyzer', 'random', 'networkx', 'pandas.Timestamp', 'requests', 'IPython.display.HTML', 'seaborn', 'tqdm.tqdm', 'matplotlib.cm', 'matplotlib.pyplot', 'plotly.express', 'plotly.graph_objects', 'plotly.figure_factory', 'plotly.subplots.make_subplots']"
What Are The Treatments?,93,1367,"['functools.reduce', 'pandas', 'numpy', 're', 'matplotlib.pyplot', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.metrics.recall_score', 'sklearn.metrics.precision_score', 'sklearn.metrics.f1_score', 'sklearn.metrics.confusion_matrix', 'sklearn.ensemble.RandomForestClassifier', 'sklearn.model_selection.train_test_split', 'IPython.core.display.display', 'IPython.core.display.HTML']"
Tracking the spread of the Coronavirus ,169,58,"['numpy', 'pandas', 'jinja2.Template', 'IPython.display.HTML', 'getpass']"
Clustering Papers using K-Means and t-SNE,138,2338,"['numpy', 'pandas', 'os', 're', 'gensim', 'spacy', 'string', 'nltk.tokenize.word_tokenize', 'nltk.corpus.stopwords', 'nltk.stem.snowball.SnowballStemmer', 'en_core_web_sm', 'sklearn.decomposition.PCA', 'sklearn.manifold.TSNE', 'sklearn.cluster.KMeans', 'matplotlib.pyplot', 'mpl_toolkits.mplot3d.Axes3D', 'seaborn', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.transform.transform', 'bokeh.io.output_notebook', 'bokeh.plotting.figure']"
Find similar COVID-19 Research Articles,42,532,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 'glob', 'json', 're', 'spacy', 'spacy.lang.en.English', 'nltk', 'nltk.corpus.wordnetaswn', 'nltk.stem.wordnet.WordNetLemmatizer', 'random', 'random.randint', 'gensim.corpora', 'pickle', 'gensim', 'pyLDAvis.gensim']"
COVID-19 Classify articles-Doc2vec PCA,74,421,"['numpy', 'pandas', 'tqdm.notebook.tqdm', 'os', 'json', 'pprint.pprint', 'copy.deepcopy', 're', 'nltk', 'nltk.corpus.stopwords', 'nltk.stem.porter.PorterStemmer', 'gensim', 'gensim.models.Doc2Vec', 'sklearn.decomposition.PCA', 'matplotlib.pyplot']"
Build CSV of Body Text,64,282,"['pandas', 'os', 'json']"
betweenness_centrality_of_the_bibliography,84,1064,"['json', 'igraph.*', 'os.walk', 'pandas', 'itertools', 'plotly.express']"
COVID-19-Word2Vec,149,91,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys', 'spacy', 'gensim', 'matplotlib.pyplot', 'matplotlib.cm', ""nltk;nltk.download('stopwords')"", 'seaborn', 'operator', 'pickle', 'nltk.corpus.stopwords', 'sklearn.manifold.TSNE']"
Laura Edell Walk Through of COVID19,42,1394,"['numpy', 'pandas', 'os', 'seaborn', 'IPython.display.IFrame', 'IPython.display.YouTubeVideo', 'json', 'glob', 'sys']"
Protein Sequence Analysis with ProtLearn,86,1153,"['pandas', 'protlearn', 'matplotlib.pyplot']"
Extract Related Documents using Bert,72,348,"['json', 'os', 'transformers.*', 'torch', 'tqdm.tqdm']"
Metadata_basic_statistics,73,296,"['numpy', 'pandas', 'os', 'collections', 're', 'matplotlib.pyplot', 'seaborn', 'nltk.tokenize.word_tokenize', 'nltk.tokenize.sent_tokenize', 'nltk.corpus.stopwords', 'nltk.stem.LancasterStemmer', 'nltk.stem.PorterStemmer', 'nltk.stem.SnowballStemmer', 'nltk.stem.WordNetLemmatizer', 'time', 'spacy', 'string']"
COVID-19 - Find mentions of mortality rates,86,117,"['numpy', 'pandas', 'json', 'os', 'nltk.tokenize.sent_tokenize']"
Trying to extract table data from the paper,231,212,"['pandas', 'requests', 'PyPDF2', 'tabula', 'camelot']"
clustering abstracts using fasttext,117,935,"['numpy', 'pandas', 're', 'os', 'nltk', 'nltk.tokenize.RegexpTokenizer', 'gensim', 'fasttext', 'fasttext.util', 'keras.preprocessing.text', 'sklearn.model_selection.train_test_split', 'sklearn.cluster.KMeans', 'nltk.cluster.KMeansClusterer', 'sklearn.cluster.DBSCAN', 'seaborn', 'sklearn.manifold.TSNE', 'sklearn.decomposition.PCA', 'sklearn.cluster.OPTICS', 'matplotlib.pyplot', 'sklearn.metrics.silhouette_score']"
Covid-19 1st transmission,158,109,"['numpy', 'pandas', 'os', 'json', 'pathlib.Path', 'spacy', 'scispacy', 'collections.Counter']"
COVID-19 - Find keywords using Word2Vec,117,512,"['numpy', 'pandas', 'json', 'os', 'nltk.tokenize.sent_tokenize', 'gensim.utils.simple_preprocess', 'gensim.sklearn_api.phrases.PhrasesTransformer', 'gensim.models.Word2Vec', 'sklearn.decomposition.TruncatedSVD', 'matplotlib.pyplot', 'seaborn']"
02 Exploring The Article-Metadata-CSV,48,4381,"['numpy', 'pandas', 'plotly.graph_objects']"
CORD-19: Match SJR Rank journals,187,531,"['numpy', 'pandas', 'matplotlib.pyplot']"
Corona(nCOVID-19 ) Detection inspect_nucleus_model,84,23,"['os', 'sys', 'random', 'math', 're', 'time', 'numpy', 'tensorflow', 'matplotlib', 'matplotlib.pyplot', 'matplotlib.patches', 'mrcnn.utils', 'mrcnn.visualize', 'mrcnn.visualize.display_images', 'mrcnn.model', 'mrcnn.model.log', 'nucleus']"
[CORD-19] Cleaning and EDA,44,1068,"['functools', 'glob', 'itertools', 'multiprocessing', 'os', 're', 'typing.List', 'typing.Tuple', 'typing.Pattern', 'numpy', 'pandas', 'plotly.graph_objects', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfTransformer', 'tqdm.notebook.tqdm', 'wordcloud.WordCloud']"
Fixing the metadata,44,14403,"['numpy', 'pandas', 'pathlib.Path', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'nltk', 'nltk.corpus.stopwords', 'os', 'sys', 'bs4.BeautifulSoup']"
COVID-19_Genetics_Origin_Evolution,236,396,"['numpy', 'pandas', 'mpl_toolkits.mplot3d.Axes3D', 'sklearn.preprocessing.StandardScaler', 'matplotlib.pyplot', 'os', 'shutil']"
All papers sorted by their citation count,72,2,"['os', 'json']"
COVID-19 paper exploration,154,88,"['pandas', 'nltk', 'nltk.stem.WordNetLemmatizer', 'nltk.tokenize.word_tokenize', 'nltk.corpus.stopwords', 'nltk.probability.FreqDist', 'numpy', 'matplotlib.pyplot', 'seaborn']"
Covid Research,94,120,"['numpy', 'pandas', 'os', 'json', 'dill', 'pathlib.Path', 'pathlib.PurePath']"
Using NLP with answer extraction,82,103,"['numpy', 'pandas', 'os', 'transformers.AutoModelForQuestionAnswering', 'transformers.AutoTokenizer', 'torch']"
ResearchPaperAPI (Data Exploitation API) ,40,2,"['os', 'json', 'pandas.io.json.json_normalize']"
Enigma_Covid19,421,19,[]
coronavirus factors research,53,2,"['numpy', 'pandas', 'os']"
COVID-19: Analysing Research Papers (NLP),234,891,"['numpy', 'pandas', 'tqdm.notebook.tqdm', 'os', 'json', 'pprint.pprint', 'copy.deepcopy', 'gensim.summarization.summarizer.summarize', 'regex', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.LancasterStemmer', 'nltk.stem.SnowballStemmer', 'nltk.stem.RegexpStemmer', 'nltk', 'nltk.sent_tokenize', 'nltk.word_tokenize', 'nltk.corpus.stopwords', 'string', 'spacy', 'spacy.lemmatizer.Lemmatizer', 'spacy.lookups.Lookups', 'textblob.TextBlob', 'collections.Counter', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'collections', 'nltk.util.ngrams', 'gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument', 'nltk.tokenize.word_tokenize', 'sklearn.manifold.TSNE', 'seaborn']"
Covid - Analyzing the Symptoms,119,1946,"['numpy', 'pandas', 'os', 'string', 'wordcloud.WordCloud', 'wordcloud.ImageColorGenerator', 'matplotlib.pyplot', 'mpld3', 'nltk.corpus.stopwords', 'collections.Counter']"
Classification of articles by Matrix Factorization,41,25,"['numpy', 'pandas', 'os', 'glob', 'json', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.KMeans', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.NMF', 'sklearn.decomposition.LatentDirichletAllocation', 'pylab', 'numpy.arange']"
COVID_19_NER extraction ,118,54,"['numpy', 'pandas', 'os', 'json', 'glob', 'spacy', 'spacy.lang.en.stop_words.STOP_WORDS', 'spacy.lang.en.English']"
CORD-19 - Data extraction functions,68,3207,"['numpy', 'pandas', 'matplotlib.pyplot', 'time', 'warnings', 'collections.Counter', 'nltk.corpus.stopwords', 'spacy', 'spacy.lang.en.English', 'os']"
High level articles grouping: Topic Modeling & EDA,266,1770,"['pandas', 'tqdm.tqdm', 'nltk', 'nltk.corpus.stopwords', 'nltk.ngrams', 'numpy', 'sklearn.feature_extraction.text', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'scipy.spatial.distance.jensenshannon', 'joblib', 'pyLDAvis', 'pyLDAvis.sklearn']"
CORD-19_research_challenge,47,2,"['pandas', 'json', 're']"
COVID-19 simple spread research,80,352,"['numpy', 'pandas', 'PIL.Image', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'matplotlib.pyplot', 'os', 'json', 'nltk.data', 're', 'collections.*', 'matplotlib.pyplot.figure']"
CoronaVirus EDA,92,58,"['pandas', 'ipywidgets.interact']"
Data manipulation with cotools,39,542,"['cotools', 'cotools.text', 'cotools.texts', 'cotools.abstract', 'cotools.abstracts', 'spacy', 'os', 'sys']"
COVID19_EDA_Study1,41,2,"['numpy', 'pandas', 'os']"
Super hacky regex search engine,51,16666,"['pathlib.Path', 'tqdm.tqdm', 'json', 're', 'collections.namedtuple', 'tqdm.auto.tqdm', 'IPython.display.display', 'IPython.display.Markdown']"
COVID-19 Research-Clustering,19,5569,"['numpy', 'pandas', 'matplotlib.pyplot', 'glob', 'json', 're', 'sklearn.feature_extraction.text.HashingVectorizer', 'sklearn.model_selection.train_test_split', 'sklearn.manifold.TSNE', 'matplotlib.pyplotasplt', 'seaborn', 'sklearn.cluster.KMeans', 'sklearn.model_selection.cross_val_score', 'sklearn.ensemble.RandomForestClassifier', 'sklearn.model_selection.cross_val_predict', 'sklearn.metrics.precision_score', 'sklearn.metrics.recall_score', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.PCA']"
Word-embedding,101,34,"['numpy', 'pandas', 'os', 'json', 're', 'string', 'gensim', 'datetime', 'collections.Counter', 'sklearn.feature_extraction.text.TfidfVectorizer', 'nltk', 'nltk.stem.PorterStemmer', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'nltk.stem.WordNetLemmatizer']"
Screening for most relevant articles,398,689,"['numpy', 'pandas', 'os', 'collections.Counter', 'matplotlib.pyplot']"
01_data_explore_get_abstracts,121,295,"['pathlib.Path', 'dataclasses.dataclass', 'json', 'pandas', 'numpy', 'matplotlib.pyplot', 'seaborn']"
covid-19 research paper language model,80,4536,"['fastai.text.*', 'numpy', 'json']"
COVID19_Italy_PatientZeros,31,141,"['matplotlib.pyplot', 'pandas', 'io', 'requests', 'numpy']"
Covid-Task-1,32,85,"['IPython.core.display.display', 'IPython.core.display.HTML', 'json', 'os']"
incubation_pediatric,20,2750,"['numpy', 'pandas', 'os', 're', 'seaborn', 'datetime.datetimeasdt', 'support_funs_incubation.stopifnot', 'support_funs_incubation.uwords', 'support_funs_incubation.idx_find', 'support_funs_incubation.find_beside', 'support_funs_incubation.ljoin', 'support_funs_incubation.sentence_find', 'support_funs_incubation.record_vals', 'colors.red', 'colors.black', 'colors.white#ansicolors', 'PIL.Image', 'matplotlib.pyplotasplt']"
Clean Metadata file,60,2,"['numpy', 'pandas', 'os']"
COVID-2019-ID,67,3079,"['numpy', 'pandas', 'os', 'sys', 'matplotlib.pyplot', 'glob', 'json', 're', 'matplotlib.cm', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.PCA', 'sklearn.manifold.TSNE', 'nltk.stem.porter.PorterStemmer', 'nltk', 'nltk.stem.snowball.SnowballStemmer']"
incubation_times_mean,18,2,"['re', 'os', 'json', 'matplotlib.pyplot', 'numpy', 'pandas', 'tqdm.tqdm']"
fatality and cure rate,123,959,"['numpy', 'pandas', 'search_func_py.*']"
Combine_Final_Graph,25,53,"['numpy', 'pandas', 'os', 'collections.Counter']"
CORD-19: Abstract and Conclusion Word Embedding,120,1594,"['sys', 'os', 'time', 'math', 'random', 'pathlib.Path', 'abc.ABC', 'abc.abstractmethod', 'typing.List', 'typing.Dict', 'collections.Counter', 'json', 'pprint.pprint#fordebugging', 'numpy', 'tensorflow', 'tensorflow.keras.preprocessing.text.text_to_word_sequence', 'tensorflow.keras', 'tensorflow.keras.layers', 'matplotlib', 'matplotlib.pyplot', 'spacy', 'en_core_sci_md']"
CORD 19 What has been published about Medical Care,24,447,"['numpy', 'pandas', 'os', 'gensim', 'pickle', 'nltk', 're', 'json', 'math', 'spacy', 'spacy.matcher.Matcher', 'matplotlib.pyplot', 'matplotlib.pyplot.figure', 'tqdm.tqdm', 'spacy.tokenizer.Tokenizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.preprocessing.StandardScaler', 'collections.Counter', 'string', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text']"
Covid19 Ascending Phase Growth Model,41,5383,"['__future__.print_function', 'ipywidgets.interact', 'ipywidgets.interactive', 'ipywidgets.fixed', 'ipywidgets.interact_manual', 'ipywidgets', 'numpy', 'pandas', 'datetime', 'datetime.date', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'plotly.graph_objects', 'plotly.subplots.make_subplots', 'folium#tocreatemaps', 'sklearn.linear_model.LinearRegression', 'sklearn.metrics', 'scipy.optimize.curve_fit']"
COVID-19 Retrieval via Sentence Similarity,21,1525,"['os', 're', 'time', 'pandas', 'numpy', 'gensim', 'gensim.summarization.summarizer.summarize', 'gensim.utils.simple_preprocess', 'gensim.models.doc2vec.Doc2Vec', 'gensim.models.doc2vec.TaggedDocument', 'collections.Counter', 'sklearn.metrics.pairwise.cosine_similarity', 'scipy.spatial.distance.cosine', 'sklearn.feature_extraction.text.TfidfVectorizer', 'spacy.displacy', 'ipywidgets', 'ipywidgets.Layout', 'IPython.display.display', 'IPython.display.clear_output', 'IPython.core.display.display', 'IPython.core.display.HTML', 'IPython.core.display.Image', 'rank_bm25.BM25Okapi', 'rank_bm25.BM25L', 'nltk', 'nltk.corpus.stopwords', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'nltk.util.ngrams', 'nltk.tokenize.word_tokenize', 'nltk.tokenize.sent_tokenize', 'nltk.stem.porter.PorterStemmer', 'sklearn.manifold.TSNE', 'range_key_dict.RangeKeyDict', 'ast', 'warnings', 'matplotlib.pyplot', 'seaborn']"
CORD-19 Named Entities - Searching Vaccines,46,2,"['numpy', 'pandas', 'collections.Counter', 'rank_bm25.BM25Okapi']"
Covid-19 - MetaData Overview,67,968,"['numpy', 'pandas', 'os', 'glob', 'seaborn', 'sys', 'json', 'requests']"
CORD-19: interactive word2vec paragraph search ,66,58251,"['numpy', 'pandas', 'os', 'glob.glob', 'tqdm.auto.tqdm', 'json', 're', 'unidecode.unidecode', 'collections.Counter', 'pickle', 'gensim', 'logging', 'sys', 'ipywidgets.widgets', 'ipywidgets.interact', 'ipywidgets.Layout', 'faiss', 'IPython.display.display', 'IPython.display.HTML', 'faiss.write_index']"
"😷 COVID-19 Social Sciences, Vaccines, and Origins",24,919,"['warnings', 'matplotlib.pyplot', 'pandas', 'numpy', 'json', 'os', 'glob', 'pprint.pprint', 'copy.deepcopy', 'tqdm.notebook.tqdm', 'gc', 'wordcloud.WordCloud', 'sacremoses.MosesDetokenizer', 'nltk.corpus.stopwords', 'nltk', 'nltk.tokenize.word_tokenize']"
Covid-19 EDA in detail,39,2,"['pandas', 'numpy', 'matplotlib.pyplot', 'plotly.offline.init_notebook_mode', 'datetime.datetime', 'datetime.timedelta', 'fbprophet.Prophet', 'sklearn.metrics', 'os', 'lightgbm', 'seaborn', 'plotly.express', 'plotly.offline', 'sklearn.preprocessing.LabelEncoder', 'plotly.subplots.make_subplots', 'plotly.graph_objects']"
COVID-19 Cases Acceleration by Country,161,569,"['pandas', 'plotly.express', 'plotly.graph_objects', 'pycountry']"
COVID-19 research NPI,145,7099,"['collections.Counter', 'numpy', 'pandas', 'matplotlib.pyplot', 'math', 'os', 'json', 're', 'gc', 'spacy', 'pytextrank', 'math.sqrt', 'operator.itemgetter', 'sklearn.preprocessing.MultiLabelBinarizer', 'sklearn.model_selection.train_test_split', 'tensorflow.compat.v1']"
QualityOfCovidData,17,1596,"['numpy', 'pandas', 'glob', 'json']"
Fastai Language Model only COVID-19 papers,145,1277,"['numpy', 'pandas', 'os', 'fastai.text.*', 'sklearn.model_selection.train_test_split', 'langdetect.detect', 'googletrans.Translator']"
cord19 data exploration,77,2,"['numpy', 'pandas', 'plotly.express', 'matplotlib.pyplot', 'datetime.date', 'crossref.restful.Works', 'json', 'time', 'os']"
Novel Corona Virus,31,304,"['numpy', 'pandas', 'tensorflow', 'sklearn.decomposition.PCA', 'sklearn.preprocessing.StandardScaler', 'os', 'json', 'glob', 'gensim.models.Word2Vec', 'nltk.tokenize.word_tokenize', 'nltk.tokenize.sent_tokenize', 'sklearn.feature_extraction.text.TfidfTransformer', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.pipeline.Pipeline', 'sklearn.cluster.KMeans', 'matplotlib.pyplot', 'mpl_toolkits.mplot3d.Axes3D', 'plotly.express']"
Extractive summary,85,901,"['numpy', 'pandas', 'os', 'json', 'pprint.pprint', 'copy.deepcopy', 'glob', 'sys', 'summarizer.Summarizer']"
EDA + Preprocessing/Cleaning CORD-19 metadata,23,3985,"['numpy', 'pandas', 'collections.Counter', 'os']"
Export Cleaned Dataset,46,79,"['numpy', 'pandas', 're', 'glob', 'os', 'sys', 'json']"
CORD19-EDA extended to all available datasets,78,1187,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 'nltk.tokenize.word_tokenize', 'nltk.corpus.stopwords', 'gensim', 'sklearn.manifold.TSNE', 'seaborn', 'matplotlib.pyplot', 'adjustText.adjust_text']"
Recommend a paper by using word embeddings,34,2077,"['matplotlib.pyplot', 'numpy', 'pandas', 'spacy', 'gensim.models.Word2Vec', 'sklearn.metrics', 'sklearn.mixture', 'sklearn.decomposition', 'spacy_langdetect.LanguageDetector', 'tqdm.auto.tqdm', 'langdetect.DetectorFactory']"
COVID-19 Incubation period,166,601,"['numpy', 'os', 'sys', 'json', 'nltk.data']"
Citation Analysis - Environmental Factors,98,2446,"['matplotlib.pyplot', 'networkx', 'numpy', 'scipy.sparse', 'pandas', 'sklearn.neighbors.NearestNeighbors']"
COVID-19-Visualization by co-occurrence network.,68,361,"['numpy', 'pandas', 'os', 're', 'pathlib.Path', 'itertools', 'collections', 'networkx', 'matplotlib.pyplot', 'seaborn']"
draft,40,251,"['random', 'math', 'time', 'string', 'nltk', 'sklearn.linear_model.LinearRegression', 'sklearn.linear_model.BayesianRidge', 'sklearn.model_selection.RandomizedSearchCV', 'sklearn.model_selection.train_test_split', 'sklearn.svm.SVR', 'sklearn.metrics.mean_squared_error', 'sklearn.metrics.mean_absolute_error', 'datetime', 'operator', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.metrics.pairwise.cosine_similarity', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.PorterStemmer', 'nltk.tokenize.word_tokenize', 'sklearn.cluster.DBSCAN', 'nltk.corpus.stopwords', 'collections.Counter', 'matplotlib.pyplot', 'tensorflow_hub', 'tensorflow', 'pyLDAvis.gensim', 'tqdm.tqdm', 'seaborn', 'pandas', 'numpy', 'pyLDAvis', 'gensim', 'spacy', 'json', 'plotly.express', 'pprint.pprint', 'copy.deepcopy', 'tqdm.notebook.tqdm', 'collections.defaultdict', 'plotly.tools', 'plotly.offline.init_notebook_mode', 'plotly.offline.iplot', 'plotly.graph_objs', 'plotly.figure_factory', 'pyLDAvis.sklearn', 'pylab.bone', 'pylab.pcolor', 'pylab.colorbar', 'pylab.plot', 'pylab.show', 'pylab.rcParams', 'pylab.savefig', 'textstat', 'matplotlib.colors', 'spacy.lang.en.stop_words.STOP_WORDS', 'spacy.lang.en.English', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.NMF', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.decomposition.TruncatedSVD', 'statistics.*', 'concurrent.futures', 'geopandas', 'warnings', 'os', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'mplleaflet', 'shapely.geometry.Point', 'bokeh.plotting.figure', 'bokeh.plotting.output_notebook', 'bokeh.plotting.show', 'bokeh.tile_providers.STAMEN_TONER', 'bokeh.plotting.ColumnDataSource', 'datashader', 'datashader.colors.viridis', 'datashader.transfer_functionsastf']"
"Preprocessing NER, SRL, BERT",77,125,"['pandas', 'numpy', 'sklearn.metrics.pairwise.cosine_similarity', 'spacy', 'scispacy', 'scispacy.abbreviation.AbbreviationDetector', 'spacy.displacy', 'tqdm.notebook.tqdm', 'transformers.AutoTokenizer', 'transformers.AutoModel', 'torch', 'allennlp.predictors.predictor.Predictor', 'collections.Counter']"
COVID-19 (Task 09),48,1419,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 (Task 08),59,2281,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 (Task 07),53,1478,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 (Task 04),55,1642,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 (Task 03),65,1590,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
nCOVID-19 Therapeutics,187,7589,"['pandas', 'numpy', 'json', 'os.path', 're']"
COVID19-Alpha to Omega,83,1913,"['numpy', 'pandas', 'os', 'jsonschema', 'json', 're', 'nltk.tokenize.RegexpTokenizer', 'nltk.tokenize.TreebankWordTokenizer', 'nltk.util.ngrams', 'nltk', 'sklearn.feature_extraction.text.ENGLISH_STOP_WORDSassklearn_stop_words', 'nltk.stem.porter.PorterStemmer', 'nltk.stem.WordNetLemmatizer', 'collections.Counter', 'collections.OrderedDict', 'copy']"
revs1_covid19_notebook,31,326,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 'scattertext', 'scattertext.CorpusFromPandas', 'scattertext.produce_scattertext_explorer', 'spacy', 'IPython.display.IFrame', 'textblob.TextBlob', 'textblob.Word', 'textblob.Blobber', 'textblob.classifiers.NaiveBayesClassifier', 'textblob.taggers.NLTKTagger']"
First Exploration of the Weather articles,45,2,"['numpy', 'pandas']"
Simple Search by Keywords Using TF-IDF,193,1487,"['pickle', 'nltk', 'os', 'json', 're', 'pandas', 'numpy', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.preprocessing.StandardScaler', 'collections.Counter']"
Covid-19 research,38,143,"['numpy', 'pandas', 'os', 'scipy.stats', 'seaborn', 'statsmodels.api', 'calendar', 'datetime']"
COV Literature Word Cloud,73,2,"['numpy', 'pandas', 're', 'nltk', 'nltk.corpus.stopwords', 'nltk.corpus.comparative_sentences', 'collections.Counter', 'os', 'json', 'wordcloud.WordCloud', 'matplotlib.pyplot']"
develop-lsi-search,51,1819,"['numpy', 'pandas', 'matplotlib.pyplot', 'glob', 'json', 're', 'nltk.corpus.stopwords', 'nltk.stem.snowball.SnowballStemmer', 'nltk.stem.wordnet.WordNetLemmatizer', 'nltk.stem.lancaster.LancasterStemmer', 'gensim', 'swifter']"
Generating Topics using LDA,75,815,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys', 're', 'nltk', 'nltk.corpus.stopwords', 'nltk.stem.PorterStemmer', 'nltk.stem.WordNetLemmatizer', 'collections.Counter', 'matplotlib.pyplot', 'string', 'nltk.tokenize.sent_tokenize', 'nltk.tokenize.word_tokenize', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.decomposition.LatentDirichletAllocationasLDA', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS']"
Predict NER and SRL on abstracts,63,359,"['os', 'json', 'spacy.tokens.DocBin', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 'pprint.pprint', 'spacy', 'scispacy.abbreviation.AbbreviationDetector', 'scispacy.umls_linking.UmlsEntityLinker', 'allennlp.predictors.predictor.Predictor', 'spacy.tokens.Doc']"
CORD-19 Solution,36,2,"['numpy', 'pandas', 'tqdm.tqdm', 'nltk.tokenize.sent_tokenize', 'nltk.tokenize.word_tokenize', 'nltk.stem.porter.PorterStemmer', 'string', 'sklearn.cluster.KMeans', 'sklearn.cluster.MiniBatchKMeans', 'gensim.corpora', 'gensim.models', 'gensim.similarities', 'itertools.chain', 'nltk.corpus.stopwords', 'operator.itemgetter', 're', 'os', 'json', 'collections.OrderedDict']"
COVID-EDA,46,2,[]
Papers on Medical Care,136,976,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Papers on Information Sharing and Collaboration,93,1001,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Papers on Ethical and Social Considerations,141,997,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Covid-19 @Zhijie,24,2,"['numpy', 'pandas', 'json', 'tqdm.tqdm', 're', 'matplotlib.pyplot', 'matplotlib.style', 'os']"
Papers on vaccines and therapeutics,174,989,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Get_file_details,28,28,"['numpy', 'pandas', 'os', 'json', 'pprint.pprint', 'copy.deepcopy', 'tqdm.notebook.tqdm', 'concurrent.futures.ThreadPoolExecutor', 'time']"
CORD-19 EDA on Literature(Kaggle's Dataset) ,27,299,"['pandas', 'numpy', 'matplotlib.pyplot', 'seaborn', 'IPython.display.Image', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'nltk.corpus.stopwords', 'os', 'json', 'collections.Counter']"
Covid-19 Paper Analysis Part I,15,196,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 'glob', 'json', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'time', 'warnings']"
CORD-19 Clustering documents using Abstract ,53,442,"['numpy', 'pandas', 'os', 'nltk', 'gensim.models.Word2Vec', 'sklearn.cluster.KMeans', 'matplotlib.pyplot', 'umap']"
COVID - Task 1 - Analysis - Submission,353,2410,"['numpy', 'pandas', 'spacy', 'json', 'os', 'gensim', 'gensim.summarization.summarize', 'gensim.summarization.summarize_corpus']"
Transmission Filtering v1,39,622,"['numpy', 'pandas', 'matplotlib.pyplot', 'nltk', 're', 'nltk.corpus.stopwords', 'itertools.chain', 'nltk.word_tokenize', 'scipy.stats']"
EDA: Cleaning the CORD-19 Dataset,77,521,"['pathlib', 'numpy', 'pandas', 're', 'matplotlib.pyplot', 'seaborn', 'uuid', 'json']"
Covid19,28,2,"['pandas', 'numpy', 'matplotlib.pyplot', 'seaborn']"
covid-19-analysis,29,2,"['numpy', 'pandas', 'os']"
Kaggle COVID Roppsters,20,2,"['numpy', 'pandas', 'os']"
Question Generation + tune bert + telegrambot,67,2,[]
Análise Exploratória - Coronavirus,47,2,"['sklearn.feature_extraction.text.CountVectorizer', 'sklearn.metrics.pairwise.cosine_similarity', 'sklearn.cluster.DBSCAN', 'nltk.stem.WordNetLemmatizer', 'nltk.stem.PorterStemmer', 'nltk.tokenize.word_tokenize', 'nltk.corpus.stopwords', 'collections.Counter', 'tqdm.tqdm', 'matplotlib.pyplot', 'seaborn', 'pandas', 'numpy', 'pyLDAvis.gensim', 'pyLDAvis', 'gensim', 'spacy', 'os']"
Cord-19ResearchC-Analysis,46,36,"['numpy', 'pandas', 'os']"
Semantic Search of Covid Content,39,361,"['numpy', 'pandas', 'os']"
 Top 10 antiretroviral C19,63,64,"['numpy', 'pandas', 'os', 'json', 'os.path', 're', 'distance', 'matplotlib.pyplot', 'itertools.combinations']"
Leitura de dados e clustering -medxiv,79,1269,[]
Could citations be used to link papers?,93,3136,[]
COVID-19 Data Visualisation,142,551,"['numpy', 'pandas', 'requests', 'io', 'plotly.express', 'qgrid']"
Text Mining COVID-19 Risk Factors,35,1480,"['numpy', 'pandas', 'os', 're', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings', 'tika.parser', 'pytextrank', 'spacy', 'pke', 'rake_nltk.Rake']"
CORD-19-Topic Modelling,46,2,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys']"
03 Create A Collaboration Network Of Scientists,37,863,"['pandas', 'networkx', 'collections.Counter', 'itertools.permutations']"
CORONA Data Analysis,14,2,"['numpy', 'pandas', 'os']"
Initial start,31,46,"['numpy', 'pandas', 'os', 'json']"
Critical Epidemic Term Visualization w/ WordCloud,36,142,"['os', 'json', 'pandas.io.json.json_normalize', 'pandas', 'matplotlib.pyplot', 'wordcloud.WordCloud', 'nltk', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize']"
CORD-19 EDA + Question & Topic Modeling,182,894,"['numpy', 'pandas', 'matplotlib.pyplot', 'plotly.express', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'collections.Counter', 'nltk.corpus.stopwords', 'sklearn.feature_extraction.text.CountVectorizer', 'warnings', 'time', 'glob', 'json', 'nltk.tokenize.RegexpTokenizer', 'nltk.stem.wordnet.WordNetLemmatizer', 'gensim.corpora.Dictionary', 'gensim.models.LdaModel', 'gensim.models.LdaMulticore']"
To Put a LAMP on COVID-19,38,2959,['covid_19_utility_script.*']
COVID-19 Ibuprofen Liver ,34,1095,['covid_19_utility_script.*']
COVID-19 Zoonosis Spillover,111,968,['covid_19_utility_script.*']
kernel68a4af7533,27,76,"['pandas', 'numpy', 'os', 'json', 'pprint.pprint', 'matplotlib.pyplot', 'warnings', 'os.walk']"
Temperature Effects and Findings,56,365,"['seaborn', 'numpy', 'pandas', 'os.path', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'pprint', 'spacy', 'matplotlib.pyplot', 'scipy.stats']"
A few peek ,24,2,[]
COVID19Frame,84,2,[]
kernela990a37deb,23,377,"['numpy', 'pandas', 'os', 'json', 'glob']"
Topic Modeling with LDA and NMF,39,191,"['pandas', 'io', 're', 'numpy', 'pprint.pprint', 'gensim', 'gensim.corpora', 'gensim.utils.simple_preprocess', 'gensim.models.CoherenceModel', 'spacy', 'nltk', 'nltk.corpus.stopwords', 'pyLDAvis', ""pyLDAvis.gensim#don'tskipthis"", 'matplotlib.pyplot', 'logging', 'warnings', 'scipy', 'sklearn;', 'sys;', 'nltk.corpus.stopwords;', 'nltk;', 'gensim.models.ldamodel', 'gensim.corpora;', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfTransformer;', 'sklearn.decomposition.NMF;', 'sklearn.preprocessing.normalize;', 'pickle;']"
Papers on Non-pharmaceutical Interventions,133,996,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Papers on Diagnostics and Surveillance,120,992,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
kernel154a79be15,19,507,"['numpy', 'pandas', 'os', 'matplotlib.pyplotasplt', 'seaborn']"
Corona_19_Clustering_and_TopicWise_Search,206,92257,"['numpy', 'pandas', 'os', 'json', 'string.punctuation', 'nltk.corpus.stopwords', 'nltk.stem.SnowballStemmer', 'nltk.tokenize.word_tokenize', 'sklearn.feature_extraction.text.CountVectorizer', 'matplotlib.pyplot', 'seaborn', 'sklearn.feature_extraction.text.TfidfTransformer', 'sklearn.cluster.KMeans']"
Abstract Similarity for COVID-19,466,2,"['pandas', 'scispacy', 'spacy', 'numpy', 'tqdm.tqdm', 'sklearn.metrics.pairwise.cosine_similarity']"
kernel2400a64d5a,19,2,"['numpy', 'pandas', 'os', 'json', 'pprint.pprint', 'copy.deepcopy', 'tqdm.notebook.tqdm']"
CORD19 - Input Data Exploration,72,281,['numpy']
Citation embeddings with visualization,45,293,"['pyspark.sql.SparkSession', 'pyspark.sql.functionsasF', 'pyspark.sql.typesasT', 'pyspark.ml.linalg.Vectors', 'pyspark.ml.linalg.VectorUDT', 'pandas', 'matplotlib.pyplot', 'networkx', 'numpy', 'scipy.sparse', 'umap', 'umap.plot', 'seaborn']"
Outbreak Data Analysis,20,1056,"['numpy', 'pandas', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'folium', 'plotly.offline', 'plotly.offline.iplot', 'plotly.offline.init_notebook_mode', 'plotly.graph_objs', 'datetime.date', 'plotly.subplots.make_subplots']"
kernel7457cf1f41,13,2,"['numpy', 'pandas', 'os']"
Coronavirus (CoVid19) - Exploratory Analysis,42,3591,"['pandas', 'numpy', 'matplotlib.pyplot', 'matplotlib.ticker', 'pycountry_convert', 'folium', 'datetime.datetime', 'datetime.timedelta', 'datetime.date', 'scipy.interpolate.make_interp_spline', 'scipy.interpolate.BSpline', 'plotly.express', 'json', 'requests', 'keras.layers.Input', 'keras.layers.Dense', 'keras.layers.Activation', 'keras.layers.LeakyReLU', 'keras.models', 'keras.optimizers.RMSprop', 'keras.optimizers.Adam']"
CORD-19: interactive search tool,14,15620,"['numpy', 'pandas', 'os', 're', 'unidecode.unidecode', 'pickle', 'gensim', 'IPython.display.display', 'IPython.display.HTML', 'faiss.read_index', 'ipywidgets.widgets', 'ipywidgets.interact', 'ipywidgets.Layout', 'ipywidgets.Dropdown', 'ipywidgets.Label', 'ipywidgets.HBox', 'ipywidgets.VBox', 'ipywidgets.interactive_output', 'ipywidgets.HTMLaswidgetHTML', 'seaborn']"
Topic Modeling BERT+LDA ,33,743,"['numpy', 'pandas', 'os', 'json', 'tqdm.tqdm', 'nltk.corpus.wordnet', 're', 'matplotlib.pyplot', 'nltk.corpus.stopwords', 'collections.Counter', 'sklearn.metrics.silhouette_score', 'umap', 'wordcloud.WordCloud', 'gensim.models.coherencemodel.CoherenceModel', 'stop_words.get_stop_words', 'nltk.stem.porter.PorterStemmer', 'nltk', 'nltk.tokenize.word_tokenize', 'language_detector.detect_language', 'pkg_resources', 'symspellpy.SymSpell', 'symspellpy.Verbosity', 'keras', 'keras.layers.Input', 'keras.layers.Dense', 'keras.models.Model', 'sklearn.model_selection.train_test_split', 'warnings', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.KMeans', 'gensim.corpora', 'gensim', 'datetime.datetime', 'pickle', 'argparse']"
[CORD-19] Embeddings 📙 from abstracts (Notebook),24,200,"['os', 'spacy', 'spacy.pipeline.merge_entities', 're', 'numpy', 'pandas', 'string', 'unidecode', 'nltk', 'nltk.corpus.wordnet', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.tokenize.word_tokenize', 'gensim.models.Word2Vec', 'tqdm.tqdm', 'pathlib.Path', 'gensim.models.FastText', 'glove.Corpus', 'glove.Glove', 'vec2graph.visualize', 'IPython.display.HTML']"
COVID19 exploration and paper recommendation,17,226,"['numpy', 'pandas', 'os', 'sklearn.feature_extraction.text.CountVectorizer', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.LatentDirichletAllocation', 'pyLDAvis.sklearn', 'json', 'wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'wordcloud.ImageColorGenerator', 'PIL.Image', 're', 'matplotlib.pyplot', 'matplotlib.style', 'copy', 'seaborn']"
wordcloud,30,2,"['wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'pandas']"
kernel6aeadef153,19,2,"['numpy', 'pandas', 'os', 'json', 'matplotlib.pyplot', 'tqdm.tqdm', 're']"
kernel666a075559,7,2,"['pandas', 'numpy', 'nltk', 'sklearn', 'matplotlib.pyplot', 'seaborn', 'nltk.corpus.stopwords', 'nltk.stem.WordNetLemmatizer', 'wordcloud.WordCloud', 'sklearn.feature_extraction.text.TfidfVectorizer']"
risk factors word cloud,18,2,"['os', 're', 'json', 'tqdm.tqdm', 'pandas', 'collections.Counter', 'stop_words.get_stop_words', 'wordcloud.WordCloud', 'matplotlib.pyplot']"
kernel162450d46d,37,11145,"['pandas', 'numpy', 'matplotlib.pyplot']"
COVID-19: Clustering  ,61,269,"['os', 'json', 'glob.glob', 'pprint.pprint', 'copy.deepcopy', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.decomposition.PCA', 'sklearn.manifold.TSNE', 'numpy', 'pandas', 'matplotlib.pyplot', 'matplotlib.cm', 'tqdm.notebook.tqdm']"
[CORD-19] Parse Data to Flat Format ,15,224,"['logging', 'gc', 'glob', 'multiprocessing', 'os', 'typing.Tuple', 'numpy', 'pandas', 'tqdm.notebook.tqdm']"
kernel6f28923430,17,236,"['os', 'json', 're', 'nltk', 'nltk.tokenize.sent_tokenize', 'tqdm.auto.tqdm', 'pandas', 'sklearn.feature_extraction.text.TfidfTransformer', 'sklearn.feature_extraction.text.CountVectorizer', 'seaborn', 'matplotlib.pyplot']"
Papers on Transmission and Incubation,156,991,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
Papers on Risk Factors,169,976,"['os', 'pandas', 'json', 'IPython.core.display.display', 'IPython.core.display.HTML', 'spacy']"
kernel35d406586c,15,2,"['numpy', 'pandas', 'os', 'matplotlib.pyplot', 'seaborn', 'sklearn.model_selection.train_test_split', 'sklearn.linear_model.LinearRegression', 'sklearn.metrics']"
COVID-19 Graph Clustering,41,6364,"['numpy', 'pandas', 'glob', 'json', 'matplotlib.pyplot', 're', 'sklearn.feature_extraction.text.HashingVectorizer', 'sklearn.model_selection.train_test_split', 'sklearn.manifold.TSNE', 'sklearn.cluster.KMeans', 'sklearn.model_selection.cross_val_score', 'sklearn.ensemble.RandomForestClassifier', 'sklearn.model_selection.cross_val_predict', 'sklearn.metrics.precision_score', 'sklearn.metrics.recall_score', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.MiniBatchKMeans', 'matplotlib.pyplotasplt', 'seaborn', 'sklearn.decomposition.PCA', 'mpl_toolkits.mplot3d.Axes3D', 'random', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.transform.transform', 'bokeh.io.output_notebook', 'bokeh.plotting.figure']"
COVID-19 Drug and chemical mentions,23,2,"['numpy', 'pandas', 'os']"
BM25 Index Search,30,2,"['numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'nltk', 'nltk.corpus.stopwords', 'rank_bm25.BM25Okapi', 'html.parser.HTMLParser', 'urllib.request', 'html2text', 'bs4', 're']"
CORD-19 Solution Toolbox,76,1125,"['wordcloud.WordCloud', 'wordcloud.STOPWORDS', 'matplotlib.pyplot', 'tqdm.tqdm_notebook', 'seaborn']"
TFIDF sklearn model,63,34,"['numpy', 'pandas', 'os', 'json', 're', 'string', 'gensim', 'datetime', 'collections.Counter', 'sklearn.feature_extraction.text.TfidfVectorizer', 'nltk', 'nltk.stem.PorterStemmer', 'nltk.corpus.stopwords', 'nltk.tokenize.word_tokenize', 'nltk.stem.WordNetLemmatizer', 'joblib.dump', 'joblib.load']"
I - COVID19-NLP-Data-Parsing_Animals,32,1194,"['numpy', 'pandas', 'json', 'sys', 'os', 'termcolor.colored', 'networkx', 'matplotlib.pyplot']"
Covid19_JAM,27,2,"['numpy', 'pandas', 'os']"
CORD-19-research-challenge,,599,['']
Knowledge Discovery from Full-Text Research Papers,97,16426,"['IPython.core.display.display', 'IPython.core.display.HTML']"
CORD-19_karen,18,42,"['numpy', 'pandas', 'os', 'json', 'tqdm.notebook.tqdm', 'pprint.pprint', 'copy.deepcopy']"
CORD-19 Named Entities - Searching Therapeutics,39,2,"['numpy', 'pandas', 'collections.Counter', 'rank_bm25.BM25Okapi']"
Clean Metadata file,17,41,"['numpy', 'pandas', 'os']"
COVID-19  NLP Research on R0,23,29,[]
chloroquine COVID-19,24,95,"['numpy', 'pandas', 'search_func_py.*']"
Incubation Question (query) design,16,1734,"['numpy', 'pandas', 'search_func_py.*']"
Virus Variations,15,88,"['numpy', 'pandas', 'search_func_py.*']"
surface persistence,21,51,"['numpy', 'pandas', 'search_func_py.*']"
COVID-19 Pandemic in Pakistan and Other ,20,3706,"['numpy', 'pandas', 'os', 'IPython.display.Image', 'matplotlib.pyplot', 'seaborn', 'plotly.express', 'plotly.graph_objects', 'folium', 'folium.plugins', 'warnings', 'plotly', 'plotly.subplots.make_subplots', 'fbprophet.Prophet']"
Covid-19,7,27,['pandas']
covid_add_sjr_if_to_metadata,14,2,"['pandas', 'json', 'Bio.Entrez', 'Bio.Medline', 'collections.Counter']"
COVID-19 (Task 10) ,35,2296,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
Task 02: CORD-19 Challenge (COVID-19),63,1354,"['pandas', 'glob', 'ast', 'nltk.stem.WordNetLemmatizer', 'nltk.corpus.wordnet', 'dateutil.parser']"
COVID-19 Unsupervised Literature Understanding,60,494,"['numpy', 'pandas', 'functools', 'IPython.core.display.display', 'IPython.core.display.HTML']"
COVID-19 Dataset : Insights,20,9279,"['os', 'gc', 're', 'folium', 'scipy.stats', 'warnings', 'math', 'numpy', 'scipy', 'pandas', 'pycountry', 'sklearn.metrics', 'sklearn.utils.shuffle', 'gensim.models.Word2Vec', 'sklearn.cluster.KMeans', 'sklearn.decomposition.PCA', 'nltk', 'textblob.TextBlob', 'wordcloud.WordCloud', 'nltk.corpus.wordnet', 'nltk.corpus.stopwords', 'nltk.WordNetLemmatizer', 'nltk.stem.WordNetLemmatizer', 'nltk.sentiment.vader.SentimentIntensityAnalyzer', 'random', 'networkx', 'pandas.Timestamp', 'requests', 'IPython.display.HTML', 'seaborn', 'tqdm.tqdm', 'matplotlib.cm', 'matplotlib.pyplot', 'plotly.express', 'plotly.graph_objects', 'plotly.figure_factory', 'plotly.subplots.make_subplots']"
Similarity between docs (20/3 update),66,2505,"['pandas', 'os', 'numpy', 'scispacy', 'json', 'spacy', 'tqdm.notebook.tqdm', 'scipy.spatial.distance', 'ipywidgets']"
Query2Vec: Creating Query-Context Embeddings,33,2111,"['pandas', 'numpy', 'nltk', 'itertools', 'random', 'hashlib', 'keras.preprocessing.text.hashing_trick', 'keras.utils.to_categorical', 'multiprocessing', 'nltk.tokenize.ToktokTokenizer', 'os', 'json', 'tqdm.tqdm', 'copy.deepcopy', 'tensorflow', 'tensorflow.keras.models.Model', 'tensorflow.keras.layers.Embedding', 'tensorflow.keras.layers.Dense', 'tensorflow.keras.layers.Input', 'tensorflow.keras.layers.Lambda', 'tensorflow.keras.layers.BatchNormalization', 'tensorflow.keras.layers.Activation', 'tensorflow.keras.layers.Dot', 'tensorflow.keras.activations.tanh', 'tensorflow.keras.activations.sigmoid', 'tensorflow.keras.optimizers.Adam', 'tensorflow.keras.callbacks.ModelCheckpoint', 'tensorflow.keras.callbacks.EarlyStopping', 'tensorflow.keras.backend', 'sklearn.model_selection.train_test_split']"
CORD-19 Competition - Final Submission,35,2,"['numpy', 'pandas', 'os']"
kernel41a29f6692,14,6,[]
COVID-19 Literature Clustering,22,6985,"['numpy', 'pandas', 'glob', 'json', 'matplotlib.pyplot', 'ast.literal_eval', 're', 'sklearn.feature_extraction.text.HashingVectorizer', 'sklearn.model_selection.train_test_split', 'sklearn.manifold.TSNE', 'matplotlib.pyplotasplt', 'seaborn', 'sklearn.cluster.KMeans', 'sklearn.model_selection.cross_val_score', 'sklearn.ensemble.RandomForestClassifier', 'sklearn.model_selection.cross_val_predict', 'sklearn.metrics.precision_score', 'sklearn.metrics.recall_score', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.cluster.MiniBatchKMeans', 'sklearn.decomposition.PCA', 'mpl_toolkits.mplot3d.Axes3D', 'random', 'bokeh.models.ColumnDataSource', 'bokeh.models.HoverTool', 'bokeh.models.LinearColorMapper', 'bokeh.palettes.Category20', 'bokeh.transform.linear_cmap', 'bokeh.io.output_file', 'bokeh.io.show', 'bokeh.transform.transform', 'bokeh.io.output_notebook', 'bokeh.plotting.figure']"
COVID-19 Challenge Notebook,31,16864,"['IPython.display.Image', 'numpy', 'pandas', 'pathlib.Path', 'pathlib.PurePath', 'requests', 'requests.exceptions.HTTPError', 'requests.exceptions.ConnectionError', 'ipywidgets.interact', 'ipywidgets', 'nltk', 'nltk.corpus.stopwords', 'rank_bm25.BM25Okapi', 'IPython.display.display']"
SciBERT+sentence similarity,24,112,"['numpy', 'pandas', 'os', 'torch', 'transformers.BertTokenizer', 'transformers.BertModel']"
CORD-19 Search articles with Doc2Vec,25,1130,"['os', 'json', 'pprint.pprint', 'copy.deepcopy', 'numpy', 'pandas', 'tqdm.notebook.tqdm', 'gensim', 'scipy.spatial.cKDTree']"
Creating a Good Analytics Report,3,3730,[]
CORVID interactive,31,6,[]
cord-19-LDA,43,158,"['numpy', 'pandas', 'os', 'json', 'glob', 'sys', 'sklearn.decomposition.LatentDirichletAllocation', 'sklearn.feature_extraction.text.TfidfVectorizer', 'sklearn.feature_extraction.text.CountVectorizer']"
